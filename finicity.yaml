openapi: 3.0.3
info:
  title: Finicity APIs
  description: >-
    OpenAPI specification for Finicity APIs


    ![](https://raw.githubusercontent.com/Finicity-Mastercard/finicity-openapi/main/res/logo.png)
  contact:
    name: Finicity
    email: business.development@finicity.com
    url: 'https://www.finicity.com/contact/'
  version: 1.1.1
servers:
  - url: 'https://api.finicity.com'
    description: Production
tags:
  - name: Authentication
    description: Generate authentication tokens and manage credentials
  - name: Customers
    description: Enroll and manage customers
  - name: Connect 🔗
    description:
      Allow customers to log into their financial institutions and grant
      Finicity authorization
  - name: App Registration
    description: Register and assign apps to customers
  - name: Consumers
    description:
      Create and manage consumers associated with customers in order to use
      report services
  - name: Accounts
    description: Fetch or refresh customer accounts
  - name: Payments
    description: Fetch ACH details and account balances
  - name: Institutions
    description: Search and fetch financial institutions
  - name: Pay Statements
    description: Upload pay statements
  - name: Assets
    description: Download asset files
  - name: Verify Assets
    description: Generate asset reports asynchronously
  - name: Verify Income and Employment
    description: Generate income and employment reports asynchronously
  - name: Bank Statements
    description: Fetch account statements and generate reports asynchronously
  - name: Transactions
    description:
      Fetch customer and account transactions and generate reports
      asynchronously
  - name: Cash Flow
    description: Generate cash flow reports asynchronously
  - name: Reports
    description: Fetch generated reports when ready
  - name: Liabilities
    description: Fetch loan payment details
  - name: Portfolios
    description: Generate portfolios of the most recent reports
  - name: TxPush
    description: Manage TxPush subscriptions
  - name: Analytics and Attributes
    description: Generate and fetch consumer attributes (Beta)
security:
  - FinicityAppKey: []
  - FinicityAppToken: []
paths:
  /aggregation/v2/partners/authentication:
    post:
      tags:
        - Authentication
      summary: Create Access Token
      description: >-
        Send Partner ID and Partner Secret to the Partner Authentication service
        to obtain a token for accessing Finicity APIs.

        * The token is valid for two hours and is required on all calls to the
        Finicity APIs

        * As a best practice, use a single token for all calls. Assign a
        timestamp for each token, and then check the current timestamp before
        making any calls. If the token is greater than 90 minutes, generate a
        new one.

        * ⚠️ After five failed attempts to authenticate, your account will be
        locked. Contact [support@finicity.com](mailto:support@finicity.com) to
        get help resetting your account.
      operationId: CreateToken
      requestBody:
        $ref: '#/components/requestBodies/CreateTokenRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateTokenResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/AuthenticationUnauthorizedErrorResponse'
      security:
        - FinicityAppKey: []
    put:
      tags:
        - Authentication
      summary: Modify Partner Secret
      description: >-
        Change the Partner Secret used to authenticate this partner.


        The secret does not expire, but can be changed by calling this endpoint.
        A valid Partner Secret may contain upper and lowercase characters,
        numbers, and the characters !, @, #, $, %, &, *, _, -, +. It must
        include at least one number and at least one letter, and its length
        should be between 12 and 255 characters.
      operationId: ModifyPartnerSecret
      requestBody:
        $ref: '#/components/requestBodies/ModifyPartnerSecretRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyPartnerSecretResponse'
        '400':
          $ref: '#/components/responses/ModifyPartnerSecretBadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/AuthenticationUnauthorizedErrorResponse'
      security:
        - FinicityAppKey: []
  /connect/v2/generate:
    post:
      tags:
        - Connect 🔗
      summary: Generate Connect URL
      description: >-
        Generate a Connect 2.0 URL link to add within your own applications.


        Use the `experience` parameter to call Connect (per session) in the body
        of the request. Configure the `experience` parameter to change the brand
        color, logo, icon, which credit decisioning report to generate when the
        Connect application completes, and more.


        Note: contact your Sales Account Team to set up the `experience`
        parameter.

         
        MVS Developers: You can pre-populate the consumer's SSN on the "Find
        employment records" page at the beginning of the MVS payroll app. Pass
        the SSN value for the consumer in the body of the request call.
      operationId: GenerateConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/lite:
    post:
      tags:
        - Connect 🔗
      summary: Generate Lite Connect URL
      description: >-
        Connect Lite is a variation of Connect Full (`POST
        /connect/v2/generate`), which has a limited set of features.

        * Sign in, user's credentials, and Multi-Factor Authentication (MFA)

        * No user account management


        The Connect Web SDK isn't a requirement when using Connect lite.
        However, if you want to use the SDK events, routes, and user events,
        then you must integrate with the Connect Web SDK.
      operationId: GenerateLiteConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateLiteConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/fix:
    post:
      tags:
        - Connect 🔗
      summary: Generate Fix Connect URL
      description: >-
        Use the Connect Fix endpoint when the following conditions occur:

        * The connection to the user's financial institution is lost

        * The user's credentials were updated (for any number of reasons)

        * The user's MFA challenge has expired
      operationId: GenerateFixConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateFixConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /connect/v2/send/email:
    post:
      tags:
        - Connect 🔗
      summary: Send Connect Email
      description: >-
        Same as Connect Full (`POST /connect/v2/generate`) but send a Connect
        email to a consumer.
      operationId: SendConnectEmail
      requestBody:
        $ref: '#/components/requestBodies/SendConnectEmailRequest'
      responses:
        '200':
          $ref: '#/components/responses/SendConnectEmailResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/generate/jointBorrower:
    post:
      tags:
        - Connect 🔗
      summary: Generate Connect URL - Joint Borrower
      description: >-
        Same as Connect Full (`POST /connect/v2/generate`) but for joint
        borrowers.


        MVS prompts both the primary and joint borrower to enter each of their
        financial, payroll, and paystub information in the same Connect session.
      operationId: GenerateJointBorrowerConnectUrl
      requestBody:
        $ref: '#/components/requestBodies/GenerateJointBorrowerConnectUrlRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateJointBorrowerConnectUrlResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /connect/v2/send/email/jointBorrower:
    post:
      tags:
        - Connect 🔗
      summary: Send Connect Email - Joint Borrower
      description: >-
        Same as Connect Joint Borrower (`POST
        /connect/v2/generate/jointBorrower`) but send a Connect email  to at
        least one of the joint borrower's email addresses. 


        When the consumer opens the email, MVS prompts both the primary and
        joint borrower to enter each of their financial, payroll, and paystub
        information in the same Connect session.
      operationId: SendJointBorrowerConnectEmail
      requestBody:
        $ref: '#/components/requestBodies/SendJointBorrowerConnectEmailRequest'
      responses:
        '200':
          $ref: '#/components/responses/SendConnectEmailResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /aggregation/v2/customers/testing:
    post:
      tags:
        - Customers
      summary: Add Testing Customer
      description: >-
        Enroll a testing customer ([Test Drive](https://signup.finicity.com/)
        accounts).


        For using Testing customers, register a test application with your
        systems engineer or account manager. Then use that testing
        `applicationId` when creating testing customers. Testing customers can
        only be assigned to testing OAuth applications and can only add accounts
        to Finbank OAuth for testing OAuth implementation as well as other
        Finbank testing institutions.
      operationId: AddTestingCustomer
      requestBody:
        $ref: '#/components/requestBodies/AddCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/AddCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /aggregation/v2/customers/active:
    post:
      tags:
        - Customers
      summary: Add Customer
      description: >-
        Enroll an active customer, which is the actual owner of one or more
        real-world accounts. This is a billable customer.
      operationId: AddCustomer
      requestBody:
        $ref: '#/components/requestBodies/AddCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/AddCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  /aggregation/v1/customers:
    get:
      tags:
        - Customers
      summary: Get Customers
      description: >-
        Find all customers enrolled by the current partner, where the search
        text is found in the customer's username or any combination of
        `firstName` and `lastName` fields. If no search text is provided, all
        customers will be returned.
      operationId: GetCustomers
      parameters:
        - $ref: '#/components/parameters/CustomerUsernameParameter'
        - $ref: '#/components/parameters/CustomerTypeParameter'
        - $ref: '#/components/parameters/CustomerSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomersResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/aggregation/v1/customers/{customerId}/application':
    get:
      tags:
        - Customers
      summary: Get Customer With App Data by ID
      description: >-
        Retrieve a customer along with additional details about the OAuth
        application.
      operationId: GetCustomerWithAppData
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerWithAppDataResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}':
    get:
      tags:
        - Customers
      summary: Get Customer by ID
      description: Retrieve a customer by ID.
      operationId: GetCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    put:
      tags:
        - Customers
      summary: Modify Customer by ID
      description: Modify an enrolled customer by ID.
      operationId: ModifyCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyCustomerRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    delete:
      tags:
        - Customers
      summary: Delete Customer by ID
      description: >-
        Completely remove a customer from the system. This will remove the
        customer and all associated accounts and transactions.


        ⚠️ Use this service carefully! It will not pause for confirmation before
        performing the operation!
      operationId: DeleteCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteCustomerResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/consumer':
    post:
      tags:
        - Consumers
      summary: Create Consumer
      description: >-
        Create a consumer record associated with the given customer. A consumer
        persists as the owner of any reports that are generated, even after the
        original customer is deleted from the system.


        A consumer must be created for the given customer before calling any of
        the "Generate Report" services.
      operationId: CreateConsumer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/CreateConsumerRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '409':
          $ref: '#/components/responses/ConflictErrorResponse'
    get:
      tags:
        - Consumers
      summary: Get Consumer For Customer
      description: >-
        Get the details of a consumer record by customer ID.
      operationId: GetConsumerForCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerForCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/consumers/{consumerId}':
    get:
      tags:
        - Consumers
      summary: Get Consumer by ID
      description: >-
        Get the details of a consumer record by consumer ID.
      operationId: GetConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    put:
      tags:
        - Consumers
      summary: Modify Consumer by ID
      description: >-
        Modify an existing consumer. All fields are required for a consumer
        record, but individual fields for this call are optional because fields
        that are not specified will be left unchanged.
      operationId: ModifyConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyConsumerRequest'
      responses:
        '204':
          $ref: '#/components/responses/ModifyConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts by Institution Login ID
      description: >-
        Get all accounts associated with the given institution login. All
        accounts returned are accessible by a single set of credentials on a
        single institution.
      operationId: GetCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    post:
      tags:
        - Accounts
      summary: Refresh Customer Accounts by Institution Login ID
      description: >-
        Refresh account and transaction data for all accounts associated with a
        given `institutionLoginId` with a connection to the institution.


        Client apps are not permitted to automate calls to the "Refresh"
        services. Active accounts are automatically refreshed by Finicity once
        per day. Because many financial institutions only post transactions once
        per day, calling Refresh repeatedly is usually a waste of resources and
        is not recommended.


        Apps may call "Refresh" services for a specific customer when there is a
        specific business case for the need of data that is up to date as of the
        moment. Please discuss with your account manager and systems engineer
        for further clarification.


        The recommended timeout setting for this request is 120 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.
      operationId: RefreshCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/RefreshCustomerAccountsRequest'
      responses:
        '200':
          $ref: '#/components/responses/RefreshCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutionLogins/{institutionLoginId}':
    delete:
      tags:
        - Accounts
      summary: Delete Customer Accounts by Institution Login ID
      description:
        Remove from the Finicity system the set of accounts matching the
        institution login ID.
      operationId: DeleteCustomerAccountsByInstitutionLogin
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteCustomerAccountsByInstitutionLoginResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}':
    get:
      tags:
        - Accounts
      summary: Get Customer Account by ID
      description: Get a customer account by ID.
      operationId: GetCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    delete:
      tags:
        - Accounts
      summary: Delete Customer Account by ID
      description: Remove the given account from the Finicity system.
      operationId: DeleteCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts
      description: Get all accounts owned by the given customer.
      operationId: GetCustomerAccounts
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountStatusParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    post:
      tags:
        - Accounts
      summary: Refresh Customer Accounts
      description: >-
        Refresh account and transaction data for all accounts associated with
        the  given `customerId` with a connection to the institution.


        Client apps are not permitted to automate calls to the "Refresh"
        services. Active accounts are automatically refreshed by Finicity once
        per day. Because many financial institutions only post transactions once
        per day, calling Refresh repeatedly is usually a waste of resources and
        is not recommended.


        Apps may call "Refresh" services for a specific customer when there is a
        specific business case for the need of data that is up to date as of the
        moment. Please discuss with your account manager and systems engineer
        for further clarification.


        The recommended timeout setting for this request is 120 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.
      operationId: RefreshCustomerAccounts
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/RefreshCustomerAccountsRequest'
      responses:
        '200':
          $ref: '#/components/responses/RefreshCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/institutions/{institutionId}/accounts':
    get:
      tags:
        - Accounts
      summary: Get Customer Accounts by Institution ID
      description: >-
        Get all active accounts owned by the given customer at the given
        institution.
      operationId: GetCustomerAccountsByInstitution
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/transactions/historic':
    post:
      tags:
        - Accounts
      summary: Load Historic Transactions for Customer Account
      description: >-
        Connect to the account's financial institution and load up to 24 months
        of historic transactions for the account. Length of history varies by
        institution.


        This is a premium service. The billable event is a call to this service
        specifying a customer ID that has not been seen before by this service.
        (If this service is called multiple times with the same customer ID, to
        load transactions from multiple accounts, only one billable event has
        occurred.)


        The recommended timeout setting for this request is 180 seconds in order
        to receive a response. However, you can terminate the connection after
        making the call the operation will still complete. You will have to pull
        the account records to check for an updated aggregation attempt date to
        know when the refresh is complete.


        The date range sent to the institution is calculated from the account's
        `createdDate`. This means that calling this service a second time for
        the same account normally will not add any new transactions for the
        account. For this reason, a second call to this service for a known
        account ID will usually return immediately.


        In a few specific scenarios, it may be desirable to force a second
        connection to the institution for a known account ID. Some examples are:


        * The institution's policy has changed, making more transactions
        available

        * Finicity has now added a longer transaction history support for the
        institution

        * The first call encountered an error, and the resulting Aggregation
        Ticket has now been fixed by the Finicity Support Team


        In these cases, the POST request can contain the parameter `force=true`
        in the request body to force the second connection.
      operationId: LoadHistoricTransactionsForCustomerAccount
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/LoadHistoricTransactionsForCustomerAccountRequest'
      responses:
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '204':
          $ref: '#/components/responses/LoadHistoricTransactionsForCustomerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/owner':
    get:
      tags:
        - Accounts
      summary: Get Account Owner
      description: >-
        Retrieve the names and addresses of the account owner from a financial
        institution.


        Note: this is a premium service, billable per every successful API call.


        This service retrieves account data from the institution. This usually
        returns quickly, but in some scenarios may take a few minutes to
        complete. In the event of a timeout condition, retry the call.
      operationId: GetAccountOwner
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountOwnerResponse'
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /aggregation/v1/partners/applications:
    post:
      tags:
        - App Registration
      summary: Register App
      description: >-
        Register a new application to access financial institutions using OAuth
        connections.
      operationId: RegisterApp
      requestBody:
        $ref: '#/components/requestBodies/RegisterAppRequest'
      responses:
        '200':
          $ref: '#/components/responses/RegisterAppResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/aggregation/v1/partners/applications/{preAppId}':
    put:
      tags:
        - App Registration
      summary: Modify App Registration
      description: Update a registered application.
      operationId: ModifyAppRegistration
      parameters:
        - $ref: '#/components/parameters/PreAppIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/ModifyAppRegistrationRequest'
      responses:
        '200':
          $ref: '#/components/responses/ModifyAppRegistrationResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /aggregation/v2/partners/applications:
    get:
      tags:
        - App Registration
      summary: Get App Registration Status
      description: Get the status of your application registration(s).
      operationId: GetAppRegistrationStatus
      parameters:
        - $ref: '#/components/parameters/PreAppIdQueryParameter'
        - $ref: '#/components/parameters/ApplicationIdQueryParameter'
        - $ref: '#/components/parameters/AppRegistrationStatusParameter'
        - $ref: '#/components/parameters/ApplicationNameParameter'
        - $ref: '#/components/parameters/SubmittedDateParameter'
        - $ref: '#/components/parameters/ModifiedDateParameter'
        - $ref: '#/components/parameters/ResultPageParameter'
        - $ref: '#/components/parameters/ResultPageSizeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAppRegistrationStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/applications/{applicationId}':
    put:
      tags:
        - App Registration
      summary: Set Customer App ID
      description: >-
        If you have multiple applications for a single client, and you want to
        register their applications to access financial institutions using OAuth
        connections, then use this API to assign applications to an existing
        customer.
      operationId: SetCustomerAppID
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ApplicationIdPathParameter'
      requestBody:
        $ref: '#/components/requestBodies/SetCustomerAppIDRequest'
      responses:
        '200':
          $ref: '#/components/responses/SetCustomerAppIDResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/institutionLogins/{institutionLoginId}/migration':
    put:
      tags:
        - App Registration
      summary: Migrate Institution Login Accounts
      description: >-
        The `institutionLoginId` parameter uses Finicity's internal FI mapping
        to move accounts from the current FI legacy connection to the new OAuth
        FI connection.


        This API returns a list of accounts for the given institution login ID.
      operationId: MigrateInstitutionLoginAccounts
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/InstitutionLoginIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/MigrateInstitutionLoginAccountsRequest'
      responses:
        '200':
          $ref: '#/components/responses/MigrateInstitutionLoginAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /institution/v2/certifiedInstitutions/rssd:
    get:
      tags:
        - Institutions
      summary: Get Certified Institutions With RSSD
      description: Search for certified financial institutions w/RSSD.
      operationId: GetCertifiedInstitutionsWithRSSD
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCertifiedInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /institution/v2/institutions:
    get:
      tags:
        - Institutions
      summary: Get Institutions
      description: Search for financial institutions.
      operationId: GetInstitutions
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  /institution/v2/certifiedInstitutions:
    get:
      tags:
        - Institutions
      summary: 'Get Certified Institutions'
      description: Search for financial institutions by certified product.
      operationId: GetCertifiedInstitutions
      parameters:
        - $ref: '#/components/parameters/InstitutionSearchParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/ProductTypeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCertifiedInstitutionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
  '/institution/v2/institutions/{institutionId}':
    get:
      tags:
        - Institutions
      summary: Get Institution by ID
      description: Get financial institution details by ID.
      operationId: GetInstitution
      parameters:
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/institution/v2/institutions/{institutionId}/branding':
    get:
      tags:
        - Institutions
      summary: Get Institution Branding by ID
      description: Return the branding information for a financial institution.
      operationId: GetInstitutionBranding
      parameters:
        - $ref: '#/components/parameters/InstitutionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetInstitutionBrandingResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  /institution/v2/institutions/subscription:
    get:
      tags:
        - Institutions
      summary: Get Institution Subscription
      description: >-
        Retrieve details of a subscription the partner has created to be alerted
        of changes to production status of financial institutions, products, and
        certification and decertification of products.


        Note: The webhook URL partners use to subscribe must be HTTPS.
      operationId: GetInstitutionSubscription
      responses:
        '200':
          $ref: '#/components/responses/GetSubscriptionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voa':
    post:
      tags:
        - Verify Assets
      summary: Generate VOA Report
      description: >-
        Generate a Verification of Assets (VOA) report for all checking,
        savings, money market, and investment accounts for the given customer.
        This service retrieves up to twelve months of transaction history for
        each account and uses this information to generate the VOA report.


        This is a premium service. The billing rate is the variable rate for
        Verification of Assets under the current subscription plan. The billable
        event is the successful generation of a VOA report.


        A report consumer must be created for the given customer before calling
        this API (see "Consumers").


        If no account of type checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.
      operationId: GenerateVOAReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/VoaReportFromDateParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voaHistory':
    post:
      tags:
        - Verify Assets
      summary: Generate VOA With Income Report
      description: >-
        Generate a Verification of Assets with Income (VOAI) report for all
        checking, savings, money market, and investment accounts for the given
        customer. This service retrieves up to 24 months of transaction history
        for each account and uses this information to generate the VOAI report.
        The report includes 1 - 6 months of all debit and credit transactions
        for asset verification. By default, the history is set to 61 days,
        however, you can change the transaction history in this section by
        setting the `fromDate` parameter. The report also includes up to 24
        months of income credit transactions (ordered by account and confidence
        level) regardless of `fromDate` for income verification.


        This is a premium service. The billable event is the successful
        generation of a VOAI report.


        A report consumer must be created for the given customer before calling
        this API (see "Consumers").


        If no account of type checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.
      operationId: GenerateVOAWithIncomeReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/VoaWithIncomeReportFromDateParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/preQualVoa':
    post:
      tags:
        - Verify Assets
      summary: Generate Prequalification Report
      description: >-
        Generate a Prequalification Report (`preQualVoa`) for all checking,
        savings, money market, and investment accounts for the given customer.
        This service retrieves account and owner information as well as the
        number of NSFs for any account that is a checking account for the
        customer. 


        This is a premium service. The billing rate is billed per report for the
        Prequalification report. 


        A report consumer must be created for the given customer before calling
        this API (see "Consumers").


        If no account of type checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.
      operationId: GeneratePrequalificationReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/assetSummary':
    post:
      tags:
        - Verify Assets
      summary: Generate Asset Summary Report
      description: >-
        Generate Asset Summary (Non-CRA) Report (`assetSummary`) for all
        checking, savings, money market, and investment accounts for the given
        customer. This service retrieves account and owner information as well
        as the number of NSFs for any account that is a checking account for the
        customer. 


        This is a premium service. The billing rate is billed per report for the
        Asset Summary report. 


        If no account type of checking, savings, money market, or investment is
        found, the service will return HTTP 400 Bad Request.
      operationId: GenerateAssetSummaryReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voi':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOI Report
      description: >-
        Generate a Verification of Income (VOI) report for all checking,
        savings, and money market accounts for the given customer. This service
        retrieves up to two years of transaction history for each account and
        uses this information to generate the VOI report.


        This is a premium service. The billing rate is the variable rate for
        Verification of Income under the current subscription plan. The billable
        event is the successful generation of a VOI report.


        If no account of type checking, savings, or money market is found, the
        service will return HTTP 400 Bad Request.
      operationId: GenerateVOIReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voePayroll':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOE - Payroll Report
      description: >-
        Premium Service: A billable event when the API response is successful. 


        MVS Implementation Options: Direct API Integration.


        Used as a complementary report to the VOIE-Payroll report. This report
        is used to fulfill the pre-close VOE requirements. It retrieves the
        customer's employment details and employment status through the payroll
        source without any income information. 


        To generate this report, pass the values from the customer `SSN`, `DOB`,
        and the `reportId` from the first VOIE-Payroll report generated after
        the Connect session.
      operationId: GenerateVOEPayrollReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePayrollReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GeneratePayrollReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voeTransactions':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOE - Transactions Report
      description: >-
        Premium Service: A billable event when the API response is successful.


        MVS-Direct integration developers only.


        Used as a complimentary report to the VOA with Income and VOIE - Paystub
        (with TXVerify) reports and used to fulfill the pre-close VOE
        requirements. 


        Retrieve the latest credit transaction information from the borrower's
        connected bank accounts and groups them into income streams so that you
        can view their payment history to ensure a direct deport was made within
        the expected cadence. The report displays transaction descriptions
        without any dollar amounts so that income re-verification isn't
        necessary.
      operationId: GenerateVOETransactionsReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/VoeTransactionsReportFromDateParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOETransactionsReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOETransactionsReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/payStatement':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate Pay Statement Report
      description: >-
        Generate Pay Statement Extraction Report for the given customer. This
        service accepts asset IDs of the stored pay statements to generate a Pay
        Statement Extraction Report. 


        This is a premium service. The billing rate is the variable rate for Pay
        Statement Extraction Report under the current subscription plan. The
        billable event is the successful generation of a Pay Statement
        Extraction Report.
      operationId: GeneratePayStatementReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePayStatementReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GeneratePayStatementReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voieTxVerify/withInterview':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOIE - Paystub (with TXVerify) Report
      description: >-
        Generate a VOIE - Paystub (with TXVerify) report for all checking and
        savings under the given customer. This service retrieves up to two years
        of transaction history for the given accounts. It then uses this
        information as well as the provided paystub(s), which are passed into
        the request body as asset IDs (generated using the Store Customer Pay
        Statement API) to generate the VOIE - Paystub (with TXVerify) report.


        Note: if you are using this endpoint to refresh the bank transactions,
        use the same asset ID from the first report. A new paystub is not
        required unless the paystub is too old for underwriting requirements.
        Using the same asset ID that was on the original report and the
        previously extracted details will be used to speed up report generation
        response time.


        This is a premium service. The billing rate is the variable rate for
        VOIE TXVerify under the current subscription plan. The billable event is
        the successful generation of a VOIE TXVerify Report.
      operationId: GenerateVOIEPaystubWithTXVerifyReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOIEPaystubWithTXVerifyReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOIEPaystubWithTXVerifyReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voieTxVerify/withStatement':
    post:
      tags:
        - Verify Income and Employment
      summary: Generate VOIE - Paystub Report
      description: >-
        Generate a VOIE - Paystub report. This service uses the provided
        paystub(s), which are passed into the request body as asset IDs
        (generated using the "Store Customer Pay Statement" API) to generate the
        VOIE - Paystub report with digitized paystub details.


        This is a premium service. The billing rate is the variable rate for
        VOIE - Paystub under the current subscription plan. The billable event
        is the successful generation of a VOIE - Paystub Report.
      operationId: GenerateVOIEPaystubReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateVOIEPaystubWithStatementReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateVOIEPaystubWithStatementReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/voiePayroll':
    post:
      tags:
        - Verify Income and Employment
      summary: Refresh VOIE - Payroll Report
      description: >-
        The VOIE – Payroll report generates when the customer completes Connect.
        Lenders, who commonly use this report for pre-close verification
        employment check, can refresh this report by passing the consumer's SSN,
        DOB, and the `reportId` from the first VOIE – Payroll report they
        received.


        We'll refresh this report and update any new pay histories since the
        first report generated, including borrower's employment status as active
        or not.


        Note: lenders can only refresh this report one time in a 60-day period
        starting from the date of the first report. Any further report refreshes
        will incur additional charges.
      operationId: RefreshVOIEPayrollReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GeneratePayrollReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GeneratePayrollReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/statement':
    get:
      tags:
        - Bank Statements
      summary: Get Customer Account Statement
      description: >-
        Retrieve the customer's bank statements in PDF format. Up to 24 months
        of history is available depending on the financial institution. Since
        this is a premium service, charges incur per each successful statement
        retrieved. 


        Our list of [Supported
        Institutions](https://docs.finicity.com/institutions/) confirms that you
        can retrieve statements for the following account types: 

        * Checking

        * Savings

        * Money market

        * CDs

        * Investments

        * Mortgage

        * Credit cards

        * Loans

        * Line of credit


        Note: setting the timeout to 180 seconds is recommended to allow enough
        time for a response.
      operationId: GetCustomerAccountStatement
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/StatementIndexParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerAccountStatementResponse'
        '203':
          $ref: '#/components/responses/MFAChallengeNeededResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/statement':
    post:
      tags:
        - Bank Statements
      summary: Generate Statement Report
      description: >-
        Generate a Statement Report report for the given accounts under the
        given customer.


        This is a premium service. A billable event will be created upon the
        successful generation of the Statement Report. 


        A report consumer must be created for the given customer before calling
        this API (see "Consumers").
      operationId: GenerateStatementReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateStatementReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateStatementReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/transactions':
    get:
      tags:
        - Transactions
      summary: Get All Customer Transactions
      description: >-
        Get all transactions available for this customer within the given date
        range, across all accounts. This service supports paging and sorting by
        `transactionDate` (or `postedDate` if no transaction date is provided),
        with a maximum of 1000 transactions per request.


        Standard consumer aggregation provides up to 180 days of transactions
        prior to the date each account was added to the Finicity system. To
        access older transactions, you must first call the service Load Historic
        Transactions for Account.


        There is no limit for the size of the window between `fromDate` and
        `toDate`, however, the maximum number of transactions returned on one
        page is 1000.
      operationId: GetAllCustomerTransactions
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/RequiredFromDateParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/transactions/{transactionId}':
    get:
      tags:
        - Transactions
      summary: Get Customer Transaction by ID
      description: Get details for the given transaction.
      operationId: GetCustomerTransaction
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/TransactionIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v3/customers/{customerId}/accounts/{accountId}/transactions':
    get:
      tags:
        - Transactions
      summary: Get Customer Account Transactions
      description: >-
        Get all transactions available for this customer account within the
        given date range. This service supports paging and sorting by
        `transactionDate` (or `postedDate` if no transaction date is provided),
        with a maximum of 1000 transactions per request.


        Standard consumer aggregation provides up to 180 days of transactions
        prior to the date each account was added to the Finicity system. To
        access older transactions, you must first call the Cash Flow
        Verification service Load Historic Transactions for Account.


        There is no limit for the size of the window between `fromDate` and
        `toDate`, however, the maximum number of transactions returned on one
        page is 1000.
      operationId: GetCustomerAccountTransactions
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/RequiredFromDateParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/StartParameter'
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/SortParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerTransactionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/transactions':
    post:
      tags:
        - Transactions
      summary: Generate Transactions Report
      description: >-
        Generate a Transaction Report for the given accounts under the given
        customer. This service retrieves up to 24 months of transaction history
        for the given customer. It then uses this information to generate the
        Transaction Report. 


        This is a premium service. A billable event will be created upon the
        successful generation of the Transactions Report. 


        A report consumer must be created for the given customer before calling
        this API (see "Consumers").


        There cannot be more than 24 months between `fromDate` and `toDate`.
      operationId: GenerateTransactionsReport
      parameters:
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/TransactionReportFromDateParameter'
        - $ref: '#/components/parameters/RequiredToDateParameter'
        - $ref: '#/components/parameters/IncludePendingParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateTransactionsReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/payStatements':
    post:
      tags:
        - Pay Statements
      summary: Store Customer Pay Statement
      description: Use this service to upload pay statements for a customer.
      operationId: StoreCustomerPayStatement
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/StoreCustomerPayStatementRequest'
      responses:
        '200':
          $ref: '#/components/responses/StoreCustomerPayStatementResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v2/customers/{customerId}/accounts/{accountId}/loanDetails':
    get:
      tags:
        - Liabilities
      summary: Get Loan Payment Details
      description: >-
        Return the loan payment details of the customer for a loan-type account.


        Note: this is a premium service, billable per every successful API call.
      operationId: GetLoanPaymentDetails
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetLoanPaymentDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/portfolios/{portfolioId}':
    get:
      tags:
        - Portfolios
      summary: Get Portfolio by Customer
      description: >
        Return a portfolio of most recently generated reports for each report
        type for the given customer. If there are multiple reports that were
        generated for a report type (VOA, VOI, etc), only the most recently
        generated report for the type will be returned.
      operationId: GetPortfolioByCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/PortfolioIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetPortfolioByCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/txpush':
    post:
      tags:
        - TxPush
      summary: Subscribe to Txpush Notifications
      description: >-
        Register a client app's TxPush Listener to receive TxPush notifications
        related to the given account.


        Each call to this service will return two records, one with class
        account and one with class transaction. Account events are sent when
        values change in the account's fields (such as `balance` or
        `interestRate`). Transaction events are sent whenever a new transaction
        is posted for the account. For institutions that do not provide TxPush
        services, notifications are sent as soon as Finicity finds a new
        transaction or new account data through regular aggregation processes.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).
      operationId: SubscribeToTxPushNotifications
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
          # ID of the account whose events will be sent to the TxPush Listener
        - $ref: '#/components/parameters/AccountIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/SubscribeToTxPushNotificationsRequest'
      responses:
        '201':
          $ref: '#/components/responses/SubscribeToTxPushNotificationsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    delete:
      tags:
        - TxPush
      summary: Disable TxPush Notifications
      description: >-
        Delete all TxPush subscriptions with their notifications for the given
        account. No more notifications will be sent for account or transaction
        events.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).
      operationId: DisableTxPushNotifications
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
          # ID of the account whose events won't be sent to the TxPush Listener
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DisableTxPushNotificationsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/transactions':
    post:
      tags:
        - TxPush
      summary: Create TxPush Test Transaction
      description: >-
        Inject a transaction into the transaction list for a testing account.
        This allows an app to trigger TxPush notifications for the account in
        order to test the app's TxPush Listener service. This causes the
        platform to send one transaction event and one account event (showing
        that the account balance has changed). This service is only supported
        for testing accounts.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).
      operationId: CreateTxPushTestTransaction
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
          # ID of the account whose events will be sent to the TxPush Listener
        - $ref: '#/components/parameters/AccountIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/CreateTxPushTestTransactionRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateTxPushTestTransactionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/subscriptions/{subscriptionId}':
    delete:
      tags:
        - TxPush
      summary: Delete TxPush Subscription
      description: >-
        Delete a specific subscription to TxPush notifications for the given
        account. This could be individual deleting the account or transactions
        events. No more events will be sent for that specific subscription.


        For additional details on this process, see [TxPush Listener
        Service](https://docs.finicity.com/txpush-listener-service/).
      operationId: DeleteTxPushSubscription
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/DeleteTxPushSubscriptionResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/consumers/{consumerId}/portfolios/{portfolioId}':
    get:
      tags:
        - Portfolios
      summary: Get Portfolio by Consumer
      description: >-
        Return a portfolio of most recently generated reports for each report
        type for a given consumer. If there are multiple reports that were
        generated for a report type (VOA, VOI, etc), only the most recently
        generated report for the type will be returned.
      operationId: GetPortfolioByConsumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdParameter'
        - $ref: '#/components/parameters/PortfolioIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetPortfolioByConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/details':
    get:
      tags:
        - Payments
      summary: Get Account ACH Details
      description: >-
        Return the real account number and routing number details for an ACH
        payment.


        Note: this is a premium service, billable per every successful API call.
      operationId: GetAccountACHDetails
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountACHDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v3/customers/{customerId}/reports/{reportId}':
    get:
      tags:
        - Reports
      summary: Get Prequalification Report by Customer and ID
      description: >-
        Get a report that has been generated by calling one of the "Generate
        Report" services.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.
      operationId: GetPrequalificationReportByCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportIdParameter'
        - $ref: '#/components/parameters/OnBehalfOfParameter'
        - $ref: '#/components/parameters/PurposeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetPrequalificationReportByCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v1/customers/{customerId}/reports':
    get:
      tags:
        - Reports
      summary: Get Reports by Customer
      description: >-
        Get all reports that have been generated by calling one of the "Generate
        Report" services for the given customer.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.
      operationId: GetReportsByCustomer
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/PurposeParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetReportsByCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  '/decisioning/v1/consumers/{consumerId}/reports':
    get:
      tags:
        - Reports
      summary: Get Reports by Consumer
      description: >-
        Get a report that has been generated by calling one of the "Generate
        Report" services.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.
      operationId: GetReportsByConsumer
      parameters:
        - $ref: '#/components/parameters/PurposeParameter'
        - $ref: '#/components/parameters/ConsumerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetReportsByConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponse'
  '/decisioning/v3/consumers/{consumerId}/reports/{reportId}':
    get:
      tags:
        - Reports
      summary: Get Report by Consumer and ID
      description: >-
        Get a report that has been generated by calling one of the "Generate
        Report" services.


        The report's status field will contain `inProgress`, `failure`, or
        `success`. If the status shows `inProgress`, the client app should wait
        20 seconds and then call this endpoint again.
      operationId: GetReportByConsumer
      parameters:
        - $ref: '#/components/parameters/PurposeParameter'
        - $ref: '#/components/parameters/ConsumerIdParameter'
        - $ref: '#/components/parameters/ReportIdParameter'
        - $ref: '#/components/parameters/OnBehalfOfParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetReportByConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/assets/{assetId}':
    get:
      tags:
        - Assets
      summary: Get Asset by Customer and ID
      description: Retrieve a binary file for the given asset ID.
      operationId: GetAssetByCustomerID
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AssetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAssetbyCustomerIDResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance/live':
    get:
      tags:
        - Payments
      summary: Get Available Balance - Live
      description: >-
        Retrieve the available and cleared account balances for a single account
        in real-time directly from a financial institution.


        Note: this is a premium service, billable per every successful API call.
      operationId: GetAvailableBalanceLive
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAvailableBalanceLiveResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/aggregation/v1/customers/{customerId}/accounts/{accountId}/availableBalance':
    get:
      tags:
        - Payments
      summary: Get Available Balance
      description: >-
        Retrieve the latest cached available and cleared account balances for a
        customer. Since we update and store balances throughout the day, this is
        the most accurate balance information available when a connection to a
        financial institution is unavailable or when a faster response is
        needed.


        Note: this is a premium service, billable per every successful API call.
        Enrollment is required.
      operationId: GetAvailableBalance
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetAvailableBalanceResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/cashFlowBusiness':
    post:
      tags:
        - Cash Flow
      summary: Generate Cash Flow Report - Business
      description: >-
        Generate a Cash Flow Report (Business) report for all checking and
        savings under the given customer. This service retrieves up to two years
        of transaction history for the given account. It then uses this
        information to generate the CFR report. A consumer is not required to
        generate this report.


        This report is not provided under FCRA rules, and this report is not
        available in the Finicity Consumer Portal for the borrower to view.


        If no account of type checking or savings is found, the service will
        return HTTP 400 Bad Request.
      operationId: GenerateCashFlowBusinessReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/CashFlowReportFromDateParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/decisioning/v2/customers/{customerId}/cashFlowPersonal':
    post:
      tags:
        - Cash Flow
      summary: Generate Cash Flow Report - Personal
      description: >-
        Generate a Cash Flow Report (Personal) report for all checking and
        savings under the given customer. This service retrieves up to two years
        of transaction history for the given account. It then uses this
        information to generate the CFR report.


        This report is provided under FCRA rules, with Finicity acting as the
        CRA (Consumer Reporting Agency). If an individual account is included in
        the report - for example, with an individual acting as an personal
        guarantor on the loan - then this version of the report should be used.
        In case of an adverse action on the loan where the decision was based on
        this report, then the borrower can be referred to the [Finicity Consumer
        Portal](https://consumer.finicityreports.com) where they can view this
        report and submit a dispute if they feel any information in this report
        is inaccurate.


        A report consumer must be created for the given customer before calling
        this API (see "Consumers").


        If no account of type checking or savings is found, the service will
        return HTTP 400 Bad Request.
      operationId: GenerateCashFlowPersonalReport
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
        - $ref: '#/components/parameters/ReportCallbackUrlParameter'
        - $ref: '#/components/parameters/CashFlowReportFromDateParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateReportRequest'
      responses:
        '202':
          $ref: '#/components/responses/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/analytics/ca360/v1/customers/{customerId}/analytics':
    post:
      tags:
        - Analytics and Attributes
      summary: Generate Consumer Attributes
      description: >-
        Generate a Consumer Attributes report for the given customer. The "to"
        and "from" date range is the last 12 months of consumer data, based on
        the date at which the report was generated.


        An analytic ID is created and associated with the customer's ID. If you
        generate multiple Consumer Attributes reports for the same customer,
        then each report will have its own analytic ID.
      operationId: GenerateConsumerAttributes
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/GenerateConsumerAttributesRequest'
      responses:
        '200':
          $ref: '#/components/responses/GenerateConsumerAttributesReponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
    get:
      tags:
        - Analytics and Attributes
      summary: List Consumer Attributes
      description: >-
        Retrieve the list of all analytic IDs previously created for a customer
        using the "Generate Consumer Attributes" API.
      operationId: ListConsumerAttributes
      parameters:
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/ListConsumerAttributesResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
  '/analytics/ca360/v1/customers/{customerId}/analytics/{analytics_id}':
    get:
      tags:
        - Analytics and Attributes
      summary: Get Consumer Attributes By ID
      description: >-
        Retrieve a Consumer Attributes report for a customer.


        Use the analytic and customer IDs to retrieve 12 months of data
        attributes according to the "to" and "from" date range of the report at
        the time it was created. 


        If the current date is before the end of the calendar month, then the
        most recent month provides all available data up to the current date.
      operationId: GetConsumerAttributesByID
      parameters:
        - $ref: '#/components/parameters/AnalyticIdParameter'
        - $ref: '#/components/parameters/CustomerIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerAttributesByIDResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '404':
          $ref: '#/components/responses/ResourceNotFoundErrorResponse'
components:
  securitySchemes:
    FinicityAppKey:
      name: Finicity-App-Key
      type: apiKey
      in: header
      description: The "Finicity-App-Key" from the developer dashboard
    FinicityAppToken:
      name: Finicity-App-Token
      type: apiKey
      in: header
      description: A token returned by the `/authentication` endpoint
  requestBodies:
    CreateTokenRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartnerCredentials'
    ModifyPartnerSecretRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartnerCredentialsWithNewSecret'
    GenerateConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectParameters'
    GenerateLiteConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiteConnectParameters'
    GenerateFixConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FixConnectParameters'
    SendConnectEmailRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectEmailParameters'
    GenerateJointBorrowerConnectUrlRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectJointBorrowerParameters'
    SendJointBorrowerConnectEmailRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectJointBorrowerEmailParameters'
    AddCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewCustomer'
    ModifyCustomerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerUpdate'
    CreateConsumerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewConsumer'
    ModifyConsumerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerUpdate'
    RefreshCustomerAccountsRequest:
      description: No payload expected
      content:
        application/json:
          schema: {}
    LoadHistoricTransactionsForCustomerAccountRequest:
      description: No payload expected
      content:
        application/json:
          schema: {}
    RegisterAppRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    ModifyAppRegistrationRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Application'
    MigrateInstitutionLoginAccountsRequest:
      required: true
      description: No payload expected
      content:
        application/json:
          schema: {}
    SetCustomerAppIDRequest:
      description: No payload expected
      content:
        application/json:
          schema: {}
    GenerateReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportConstraints'
    GeneratePayrollReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayrollReportConstraints'
    GeneratePayStatementReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayStatementReportConstraints'
    GenerateVOIEPaystubWithTXVerifyReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEWithTXVerifyReportConstraints'
    GenerateVOIEPaystubWithStatementReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEWithStatementReportConstraints'
    StoreCustomerPayStatementRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayStatement'
    GenerateVOETransactionsReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOETransactionsReportConstraints'
    GenerateStatementReportRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatementReportConstraints'
    CreateTxPushTestTransactionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TestTxPushTransaction'
    SubscribeToTxPushNotificationsRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TxPushSubscriptionParameters'
    GenerateConsumerAttributesRequest:
      description: No payload expected
      content:
        application/json:
          schema: {}
  responses:
    CreateTokenResponse:
      description: The access token was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessToken'
    ModifyPartnerSecretResponse:
      description: The Partner Secret was successfully updated
    ModifyPartnerSecretBadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            InvalidNewPartnerSecretExample:
              $ref: '#/components/examples/InvalidNewPartnerSecretExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
    GenerateConnectUrlResponse:
      description: The URL link was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectUrl'
    SendConnectEmailResponse:
      description: The URL link was successfully generated and the email sent.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectEmailUrl'
    GenerateJointBorrowerConnectUrlResponse:
      description: The URL link was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectUrl'
    AddCustomerResponse:
      description: The customer was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedCustomer'
    GetCustomersResponse:
      description: Customers were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customers'
    GetCustomerResponse:
      description: The customer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    GetCustomerWithAppDataResponse:
      description: The customer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerWithAppData'
    ModifyCustomerResponse:
      description: The customer was successfully updated
    DeleteCustomerResponse:
      description: The customer was successfully deleted
    CreateConsumerResponse:
      description: The consumer was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedConsumer'
    GetConsumerForCustomerResponse:
      description: The consumer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consumer'
    GetConsumerResponse:
      description: The consumer was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Consumer'
    ModifyConsumerResponse:
      description: The consumer was successfully updated
    GetCustomerAccountsResponse:
      description: The account list was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
    RefreshCustomerAccountsResponse:
      description: The account list was successfully refreshed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
    DeleteCustomerAccountsByInstitutionLoginResponse:
      description: The customer accounts were successfully deleted
    DeleteCustomerAccountResponse:
      description: The customer account was successfully deleted
    LoadHistoricTransactionsForCustomerAccountResponse:
      description:
        Historic transactions have been loaded successfully. The transactions
        are now available by calling "Get Customer Account Transactions".
    GetCustomerAccountResponse:
      description: The account was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccount'
    GetAccountOwnerResponse:
      description: The account owner was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountOwner'
    MFAChallengeNeededResponse:
      description:
        The response contains an MFA challenge in XML or JSON format. Contact
        your Account Manager or Systems Engineers to determine the best route to
        handle this error.
    RegisterAppResponse:
      description: The app registration was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisteredApplication'
    SetCustomerAppIDResponse:
      description: The app was successfully assigned
    ModifyAppRegistrationResponse:
      description: The app registration was updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegisteredApplication'
    GetAppRegistrationStatusResponse:
      description: The app registration statuses were returned
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppStatuses'
    MigrateInstitutionLoginAccountsResponse:
      description: The migration succeeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerAccounts'
    GetCertifiedInstitutionsResponse:
      description: Institutions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertifiedInstitutions'
    GetInstitutionResponse:
      description: Institution was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstitutionWrapper'
    GetInstitutionsResponse:
      description: Institutions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Institutions'
    GetSubscriptionResponse:
      description: The institution subscription details were retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Subscription'
    GetInstitutionBrandingResponse:
      description: Institution branding was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandingWrapper'
    GenerateReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportData'
    GeneratePayrollReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayrollReportData'
    GenerateTransactionsReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionsReportData'
    GetPrequalificationReportByCustomerResponse:
      description: The report was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrequalificationReport'
    GetReportsByCustomerResponse:
      description: The reports summaries were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportSummaries'
    GetReportsByConsumerResponse:
      description: The reports summaries were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportSummaries'
    GetReportByConsumerResponse:
      description: The report was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuditableReport'
    GetAssetbyCustomerIDResponse:
      description: The asset was successfully downloaded
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    GetCustomerAccountStatementResponse:
      description: The statement was successfully downloaded as a PDF file
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    StoreCustomerPayStatementResponse:
      description: The pay statement was successfully uploaded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Asset'
    GenerateVOETransactionsReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOETransactionsReportData'
    GeneratePayStatementReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayStatementReportData'
    GenerateVOIEPaystubWithTXVerifyReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEPaystubWithTXVerifyReportData'
    GenerateVOIEPaystubWithStatementReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VOIEPaystubWithStatementReportData'
    GenerateStatementReportResponse:
      description:
        "The report is being generated. When finished, a notification will be
        sent to the specified callback URL (Report Listener Service) and the
        report can be fetched using 'Get Report' endpoints. If you don't use a
        callback URL, 'Get Report' will return a minimal report with the
        following status: `inProgress`. Repeat the call every 20 seconds until
        'Get Report' returns a different status."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StatementReportData'
    GetCustomerTransactionsResponse:
      description: The transactions were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transactions'
    GetCustomerTransactionResponse:
      description: The transaction was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transaction'
    GetAccountACHDetailsResponse:
      description: Account ACH details were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ACHDetails'
    GetAvailableBalanceResponse:
      description: The balance was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailableBalance'
    GetAvailableBalanceLiveResponse:
      description: The live balance was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AvailableBalance'
    GetLoanPaymentDetailsResponse:
      description: The loan payment details were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoanPaymentDetails'
    GetPortfolioByCustomerResponse:
      description: The portfolio was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortfolioSummary'
    GetPortfolioByConsumerResponse:
      description: The portfolio was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortfolioWithConsumerSummary'
    DeleteTxPushSubscriptionResponse:
      description: The subscription was successfully deleted
    DisableTxPushNotificationsResponse:
      description: Subscriptions were successfully deleted for the given account
    SubscribeToTxPushNotificationsResponse:
      description: The subscription was successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TxPushSubscriptions'
    CreateTxPushTestTransactionResponse:
      description: The test notification was successfully sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedTestTxPushTransaction'
    GenerateConsumerAttributesReponse:
      description: The Consumer Attributes report was successfully generated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerAttributesAnalyticId'
    GetConsumerAttributesByIDResponse:
      description: The Consumer Attributes report was successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerAttributes'
    ListConsumerAttributesResponse:
      description: Attributes IDs were successfully retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerAttributeList'
    AuthenticationUnauthorizedErrorResponse:
      description: >-
        The request lacks valid authentication credentials. Check Partner ID,
        Partner Secret or Finicity-App-Key.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFinicityAppKeyExample:
              $ref: '#/components/examples/MissingFinicityAppKeyExample'
            InvalidCredentialsExample:
              $ref: '#/components/examples/InvalidCredentialsExample'
    UnauthorizedErrorResponse:
      description: >-
        The request lacks valid authentication credentials. Check
        "Finicity-App-Key" or "Finicity-App-Token".
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ExpiredTokenExample:
              $ref: '#/components/examples/ExpiredTokenExample'
            MissingFinicityAppKeyExample:
              $ref: '#/components/examples/MissingFinicityAppKeyExample'
    BadRequestErrorResponse:
      description: The request was rejected
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            MissingFieldExample:
              $ref: '#/components/examples/MissingFieldExample'
            InvalidFieldExample:
              $ref: '#/components/examples/InvalidFieldExample'
            InvalidExperienceFieldExample:
              $ref: '#/components/examples/InvalidExperienceFieldExample'
            GenericBadRequestExample:
              $ref: '#/components/examples/GenericBadRequestExample'
    TooManyRequestsErrorResponse:
      description:
        The service can't accept more requests or is not available from the
        [Test Drive](https://signup.finicity.com/).
    ResourceNotFoundErrorResponse:
      description: The resource doesn't exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ConsumerNotFoundExample:
              $ref: '#/components/examples/ConsumerNotFoundExample'
            NoAccountForInstitutionLoginIdExample:
              $ref: '#/components/examples/NoAccountForInstitutionLoginIdExample'
            CustomerNotFoundExample:
              $ref: '#/components/examples/CustomerNotFoundExample'
            NoConsumerForCustomerExample:
              $ref: '#/components/examples/NoConsumerForCustomerExample'
            ResourceNotFoundExample:
              $ref: '#/components/examples/ResourceNotFoundExample'
            NoRegisteredApplicationExample:
              $ref: '#/components/examples/NoRegisteredApplicationExample'
    ConflictErrorResponse:
      description: The resource already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            ConsumerExistsConflictExample:
              $ref: '#/components/examples/ConsumerExistsConflictExample'
  examples:
    MissingFinicityAppKeyExample:
      value:
        code: 10026
        message: Missing parameter (Finicity-App-Key)
    InvalidCredentialsExample:
      value:
        code: 10001
        message: Invalid credentials
    GenericBadRequestExample:
      value:
        code: 14020
        message: Bad request.
    MissingFieldExample:
      value:
        code: '10010'
        status: '400'
        message: '"partnerId" is required'
        user_message: >-
          One or more of the fields could not be validated. Please ensure you
          have entered the correct data.
        tags: ''
    InvalidFieldExample:
      value:
        code: '10010'
        status: '400'
        message: Customer ID does not exist or does not belong to this partner
        user_message: >-
          One or more of the fields could not be validated. Please ensure you
          have entered the correct data.
        tags: ''
    InvalidExperienceFieldExample:
      value:
        code: '10010'
        status: '400'
        message: '"experience" must be a valid GUID'
        user_message:
          'One or more of the fields could not be validated. Please ensure you
          have entered the correct data.'
        tags: ''
    InvalidNewPartnerSecretExample:
      value:
        code: 24437
        message: New password is not as per policy
    ExpiredTokenExample:
      value:
        code: '10022'
        status: '401'
        message: Invalid authorization credentials
        user_message: The session has expired or is invalid
        tags: ''
    NoAccountForInstitutionLoginIdExample:
      value:
        code: '38007'
        status: '404'
        title: Connecting accounts error
        user_message:
          Customer does not have any accounts associated with
          institutionLoginId.
        tags: ''
        level: 'error'
        message:
          'Customer does not have any accounts associated with
          institutionLoginId.'
    CustomerNotFoundExample:
      value:
        code: 14001
        message: 'Customer not found.'
    ConsumerNotFoundExample:
      value:
        code: 10100
        message: 'Cannot find consumer with id 1234.'
    NoConsumerForCustomerExample:
      value:
        code: 10100
        message: 'Cannot find consumer for customer with id 5011115315."'
    ResourceNotFoundExample:
      value:
        code: 14001
        message: 'Resource not found.'
    NoRegisteredApplicationExample:
      value:
        code: 50051
        message: 'No registered partner applications found.'
    ConsumerExistsConflictExample:
      value:
        code: 11000
        message: 'A consumer already exists for customer 4025024821'
  parameters:
    AssetIdParameter:
      description: The Finicity asset ID
      name: assetId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AssetId'
      example: 097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178
    CustomerIdParameter:
      description: A Finicity customer ID
      name: customerId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CustomerId'
      example: '1005061234'
    AccountStatusParameter:
      description: A filter to fetch account in the given status
      name: status
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AccountStatus'
      example: pending
    AnalyticIdParameter:
      description: The Finicity analytic ID
      name: analytics_id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AnalyticId'
      example: ce9693d5-a83e-4ad0-a694-6f48c4fc7877
    TransactionIdParameter:
      description: A Finicity transaction ID
      name: transactionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TransactionId'
      example: 21284820852
    IncludePendingParameter:
      description: If pending transactions must be included
      name: includePending
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/IncludePending'
      example: false
    ApplicationIdPathParameter:
      description: The application ID
      name: applicationId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ApplicationId'
      example: '123456789'
    ApplicationIdQueryParameter:
      description: The application ID
      name: applicationId
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationId'
      example: '123456789'
    AppRegistrationStatusParameter:
      description: Look up app registration requests by status
      name: status
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AppRegistrationStatus'
      example: P
    ApplicationNameParameter:
      description: Look up app registration requests by app name
      name: appName
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationName'
      example: Awesome Budget App
    SubmittedDateParameter:
      description:
        Look up app registration requests by the date they were submitted
      name: submittedDate
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    ModifiedDateParameter:
      description:
        Look up app registration requests by the date the request was updated.
        This can be used to determine when a request was updated to "A" or "R".
      name: modifiedDate
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    PreAppIdQueryParameter:
      description: The application registration tracking ID
      name: preAppId
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PreAppId'
      example: '2581'
    PreAppIdPathParameter:
      description: The application registration tracking ID
      name: preAppId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PreAppId'
      example: '2581'
    CustomerSearchParameter:
      name: search
      in: query
      required: false
      description: >-
        The text you wish to match. Leave this empty if you wish to return all
        customers. Must be URL-encoded (see also: [Handling Spaces in
        Queries](https://docs.finicity.com/endpoint-syntax-and-format/)).
      schema:
        type: string
        example: searchvalue
    CustomerUsernameParameter:
      name: username
      in: query
      required: false
      description: Username for exact match (will return 0 or 1 record)
      schema:
        $ref: '#/components/schemas/CustomerUsername'
      example: customerusername1
    CustomerTypeParameter:
      name: type
      in: query
      required: false
      description: >-
        "testing" or "active" to return only customers of that type, or leave
        empty to return all customers.
      schema:
        $ref: '#/components/schemas/CustomerType'
      example: 'active'
    AccountIdParameter:
      description: The account ID
      name: accountId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AccountId'
      example: '5011648377'
    StatementIndexParameter:
      name: index
      in: query
      required: false
      description:
        Request statements from 1-24. By default, 1 is the most recent
        statement. Increase the index value to count back (by month) and
        retrieve its most recent statement.
      schema:
        type: integer
        format: int32
        default: 1
        example: 1
        maximum: 24
    SubscriptionIdParameter:
      description: The subscription ID
      name: subscriptionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SubscriptionId'
      example: 17554874
    InstitutionLoginIdParameter:
      description: The institution login ID
      name: institutionLoginId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/InstitutionLoginId'
      example: '1007302745'
    InstitutionIdParameter:
      description: The institution ID
      name: institutionId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/InstitutionId'
      example: '4222'
    PurposeParameter:
      name: purpose
      in: query
      required: false
      description: >-
        2-digit code from [Permissible Purpose
        Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying
        the reason for retrieving this report.
      schema:
        type: string
      example: '99'
    ReportIdParameter:
      name: reportId
      in: path
      description: Finicity's ID of the report
      required: true
      schema:
        $ref: '#/components/schemas/ReportId'
      example: u4hstnnak45g
    OnBehalfOfParameter:
      name: onBehalfOf
      in: query
      description:
        The name of the entity you are retrieving the report on behalf of
      required: true
      schema:
        type: string
        example: 'Some entity'
    ConsumerIdParameter:
      description: The consumer ID
      name: consumerId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ConsumerId'
      example: '0bf46322c167b562e6cbed9d40e19a4c'
    PortfolioIdParameter:
      description:
        A portfolio ID with the portfolio version number. Using the portfolio
        number without a version number will return the most recently generated
        reports.
      name: portfolioId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/PortfolioId'
      example: y4zsgccj4xpw-6-port
    StartParameter:
      name: start
      in: query
      required: false
      description: Index of the page of results to return
      schema:
        type: integer
        format: int32
        default: 1
        example: 1
    LimitParameter:
      name: limit
      in: query
      required: false
      description: Maximum number of results per page
      schema:
        type: integer
        format: int32
        default: 25
        maximum: 1000
        example: 25
    SortParameter:
      name: sort
      in: query
      required: false
      description: 'Date sort order: "asc" for ascending, "desc" for descending'
      schema:
        type: string
        default: 'desc'
        example: 'desc'
    ResultPageParameter:
      name: page
      in: query
      required: false
      description: Index of the page of results to return
      schema:
        type: integer
        format: int32
        default: 1
        example: 1
    ResultPageSizeParameter:
      name: pageSize
      in: query
      required: false
      description: Maximum number of results per page
      schema:
        type: integer
        format: int32
        default: 1
        example: 20
    ProductTypeParameter:
      name: type
      in: query
      description:
        'A product type: "transAgg", "ach", "stateAgg", "voi", "voa", "aha",
        "availBalance", "accountOwner"'
      required: false
      schema:
        type: string
        example: voa
    InstitutionSearchParameter:
      name: search
      in: query
      description:
        Search term (financial institution `name` field). Leave empty for all
        FIs.
      required: false
      schema:
        type: string
        example: finbank
    RequiredFromDateParameter:
      description: A "from" date
      name: fromDate
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    RequiredToDateParameter:
      description: A "to" date
      name: toDate
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    TransactionReportFromDateParameter:
      name: fromDate
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UnixDate'
      description:
        Limit the amount of credit transactions included in the report up to the
        given date, up to 24 months. Without this parameter, a report defaults
        to 24 months if available. Must be within 2 years of the present day.
      example: 1607450357
    VoeTransactionsReportFromDateParameter:
      name: fromDate
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UnixDate'
      description:
        Limit the amount of credit transactions included in the report up to the
        given date, up to 120 days. Without this parameter, a report defaults to
        120 days if available. Must be within 120 days of the present day.
      example: 1607450357
    ReportCallbackUrlParameter:
      name: callbackUrl
      in: query
      required: false
      description:
        A Report Listener URL to receive notifications. The webhook must respond
        to the Finicity API with 2xx HTTP status code.
      schema:
        type: string
        example: 'https://finicity-test/webhook'
    VoaReportFromDateParameter:
      name: fromDate
      in: query
      required: false
      description:
        Without this parameter, the report defaults to 6 months if available. If
        included, the date should be within two years of the present day.
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    VoaWithIncomeReportFromDateParameter:
      name: fromDate
      in: query
      required: false
      description:
        Without this parameter, the report defaults to 61 days if available.
        This will limit the amount of credit and debit transactions included in
        the report up to the date specified, but will not limit the amount of
        income stream transactions. The income stream transactions are all
        included, up to 24 months, to help the lender and GSE's have the full
        history to validate income. If included, the date should be within two
        years of the present day.
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
    CashFlowReportFromDateParameter:
      name: fromDate
      in: query
      required: false
      description:
        Without this parameter, the report defaults to 6 months if available. If
        included, the date should be within two years of the present day.
      schema:
        $ref: '#/components/schemas/UnixDate'
      example: 1607450357
  schemas:
    ErrorMessage:
      required:
        - code
      type: object
      properties:
        code:
          type: object
          description: An error code (can be returned as a number or a string)
          example: '10001'
        status:
          type: string
          description: A status code
          example: '401'
        title:
          type: string
          description: A title for the error
          example: Connecting accounts error
        level:
          type: string
          description: An error level
          example: error
        message:
          type: string
          description: An error message
          example: Invalid authorization credentials
        user_message:
          type: string
          description: Some more details about the error
          example: The session has expired or is invalid
        assetId:
          $ref: '#/components/schemas/AssetId'
        accountId:
          $ref: '#/components/schemas/AccountId'
    PartnerId:
      type: string
      description:
        Your Partner ID displayed in the [Developer
        Dashboard](https://developer.finicity.com/admin)
      example: '1234583871234'
    PartnerName:
      type: string
      description: Name of a Finicity partner
      example: Finicity Test API
    ConsumerId:
      type: string
      description: 'A Finicity consumer ID. See also: "Create Consumer".'
      example: '0bf46322c167b562e6cbed9d40e19a4c'
    CustomerId:
      type: string
      description: 'A Finicity customer ID. See also: "Add Customer".'
      example: '1005061234'
    NumericCustomerId:
      type: integer
      format: int64
      description:
        'A Finicity customer ID represented as a number. See also: "Add
        Customer".'
      example: 1005061234
    AccountStatus:
      description: An account status
      type: string
      example: pending
    ReportId:
      type: string
      description: A Finicity report ID
      example: u4hstnnak45g
    ReportCoveredDays:
      type: integer
      description: Number of days covered by the report
      format: int32
      example: 230
    Seasoned:
      type: boolean
      description: If a report covers more than 180 days
      example: true
    ReportTitle:
      type: string
      description: Title of the report
      example: Finicity Asset Ready Report (CRA)
    ReportRequestId:
      type: string
      description:
        Finicity indicator to track all activity associated with this report
      example: cjqm4wtdcn
    PortfolioId:
      type: string
      description:
        A unique identifier that will be consistent across all reports created
        for the same customer
      example: y4zsgccj4xpw-6-port
    AccountId:
      type: string
      description: A Finicity account ID
      example: '5011648377'
    NumericAccountId:
      type: integer
      format: int64
      description: A Finicity account ID represented as a number
      example: 5011648377
    AccountNumberLast4:
      type: string
      description: The last 4 digits of the ACH account number
      example: '5678'
    SubscriptionId:
      description: ID of a TxPush subscription
      type: integer
      format: int64
      example: 17554874
    SubscriptionType:
      type: string
      description: A TxPush subscription type ("account" or "transaction")
      example: 'account'
    TransactionId:
      type: integer
      description: A Finicity transaction ID
      format: int64
      example: 21284820852
    IncludePending:
      type: boolean
      description: If pending transactions must be included
      example: true
      default: false
    AssetId:
      type: string
      description:
        A Finicity asset ID. Generated by Connect or by using the "Store
        Customer Pay Statement" API.
      example: 097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178
    ReportAccountIdsString:
      type: string
      description:
        A whitespace-separated list of Finicity account IDs to be included in
        the report (all accounts will be included if not set)
      example: '5011648377 5011648378 5011648379'
    ReportAccountIds:
      description:
        An array of Finicity account IDs to be included in the report (all
        accounts will be included if not set)
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
      example:
        - '5011648377'
        - '5011648378'
        - '5011648379'
    Rssd:
      type: integer
      description: >-
        The RSSD ID is a unique identifier assigned to financial institutions by
        the Federal Reserve. While the length of the RSSD ID varies by
        institution, it cannot exceed 10 numerical digits.
      format: int64
      example: 490535
    InstitutionId:
      description: The ID of a financial institution
      type: string
      example: '4222'
    NumericInstitutionId:
      description: The ID of a financial institution, represented as a number
      type: integer
      format: int64
      example: 4222
    InstitutionName:
      type: string
      description: The name of the institution
      example: 'FinBank'
    InstitutionTransAgg:
      type: boolean
      description: >-
        `true`: The institution is certified for the Transaction Aggregation
        product

        `false`: The institution is decertified for the Transaction Aggregation
        product
      example: true
    InstitutionAch:
      type: boolean
      description: >-
        `true`: The institution is certified for the ACH product

        `false`: The institution is decertified for the ACH product
      example: true
    InstitutionStateAgg:
      type: boolean
      description: >-
        `true`: The institution is certified for the Statement Aggregation
        product

        `false`: The institution is decertified for the Statement Aggregation
        product
      example: false
    InstitutionVoi:
      type: boolean
      description: >-
        `true`: The institution is certified for the VOI product

        `false`: The institution is decertified for the VOI product
      example: true
    InstitutionVoa:
      type: boolean
      description: >-
        `true`: The institution is certified for the VOA product

        `false`: The institution is decertified for the VOA product
      example: true
    InstitutionAha:
      type: boolean
      description: >-
        `true`: The institution is certified for the Account History Aggregation
        product

        `false`: The institution is decertified for the Account History
        Aggregation product
      example: false
    InstitutionAvailableBalance:
      type: boolean
      description: >-
        `true`: The institution is certified for the Account Balance Check (ABC)
        product

        `false`: The institution is decertified for the Account Balance Check
        product
      example: false
    InstitutionAccountOwner:
      type: boolean
      description: >-
        `true`: The institution is certified for the Account Owner product

        `false`: The institution is decertified for the Account Owner product
      example: true
    InstitutionLoginId:
      type: string
      description: An institution login ID (from the account record)
      example: '1007302745'
    NumericInstitutionLoginId:
      type: integer
      format: int64
      description:
        An institution login ID (from the account record), represented as a
        number
      example: 1007302745
    PartnerCredentials:
      required:
        - partnerId
        - partnerSecret
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        partnerSecret:
          type: string
          description:
            Your Partner Secret displayed in the [Developer
            Dashboard](https://developer.finicity.com/admin)
          example: aqJ5Ic4SEVx2IgDQ6oR4
    PartnerCredentialsWithNewSecret:
      required:
        - partnerId
        - partnerSecret
        - newPartnerSecret
      type: object
      allOf:
        - $ref: '#/components/schemas/PartnerCredentials'
        - type: object
          properties:
            newPartnerSecret:
              type: string
              description: A new value for the Partner Secret
              example: OrU7tjiA3tIspCgb85xV
    AccessToken:
      required:
        - token
      type: object
      description: >-
        A temporary access token to be passed in the `Finicity-App-Token` HTTP
        header of all subsequent API requests
      properties:
        token:
          description: The access token value
          type: string
          example: YBh22Sb9Es6e66Q7lWdt
    ConnectParameters:
      required:
        - partnerId
        - customerId
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        consumerId:
          # Required for any connect type that generates a report
          $ref: '#/components/schemas/ConsumerId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        optionalConsumerInfo:
          $ref: '#/components/schemas/ConsumerInfo'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
        experience:
          $ref: '#/components/schemas/Experience'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    LiteConnectParameters:
      required:
        - partnerId
        - customerId
        - institutionId
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        experience:
          $ref: '#/components/schemas/Experience'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
    FixConnectParameters:
      required:
        - partnerId
        - customerId
        - institutionLoginId
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionLoginId:
          # Used in type "fix" in order to pull up a fix flow for a specific set of
          # accounts under one institution login ID
          $ref: '#/components/schemas/InstitutionLoginId'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        experience:
          $ref: '#/components/schemas/Experience'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
    ConnectEmailParameters:
      required:
        - partnerId
        - customerId
        - consumerId
        - email
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        redirectUri:
          # If this parameter isn't specified, then a "thank you" screen
          # appears and the customer ends Connect.
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        email:
          $ref: '#/components/schemas/EmailOptions'
        experience:
          $ref: '#/components/schemas/Experience'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        optionalConsumerInfo:
          $ref: '#/components/schemas/ConsumerInfo'
    ConnectJointBorrowerParameters:
      required:
        - partnerId
        - borrowers
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        borrowers:
          $ref: '#/components/schemas/Borrowers'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        experience:
          $ref: '#/components/schemas/Experience'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
    ConnectJointBorrowerEmailParameters:
      required:
        - partnerId
        - borrowers
        - email
        - experience
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        borrowers:
          $ref: '#/components/schemas/Borrowers'
        redirectUri:
          $ref: '#/components/schemas/RedirectUri'
        webhook:
          $ref: '#/components/schemas/Webhook'
        webhookContentType:
          $ref: '#/components/schemas/WebhookContentType'
        webhookData:
          $ref: '#/components/schemas/WebhookData'
        webhookHeaders:
          $ref: '#/components/schemas/WebhookHeaders'
        institutionSettings:
          $ref: '#/components/schemas/InstitutionSettings'
        email:
          $ref: '#/components/schemas/EmailOptions'
        experience:
          $ref: '#/components/schemas/Experience'
        fromDate:
          $ref: '#/components/schemas/ConnectFromDate'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        singleUseUrl:
          $ref: '#/components/schemas/SingleUseUrl'
    Borrowers:
      type: array
      items:
        $ref: '#/components/schemas/Borrower'
      description: >-
        (MVS) Array of borrowers to pass the primary and joint borrower's
        customer and consumer IDs
    Borrower:
      required:
        - customerId
        - consumerId
        - type
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/CustomerId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        type:
          $ref: '#/components/schemas/BorrowerType'
        optionalConsumerInfo:
          $ref: '#/components/schemas/ConsumerInfo'
    BorrowerType:
      enum:
        - primary
        - jointBorrower
      type: string
      example: primary
    ConsumerInfo:
      description: The SSN and date of birth of a consumer
      required:
        - ssn
      type: object
      properties:
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumberNoHyphens'
        dob:
          $ref: '#/components/schemas/ConsumerDateOfBirth'
    SocialSecurityNumberNoHyphens:
      type: string
      description: A full SSN without hyphens
      example: '999999999'
    SocialSecurityNumber:
      type: string
      description: A full SSN with or without hyphens
      example: '999-99-9999'
    SocialSecurityNumberLastDigits:
      type: string
      description: Last 4 digits of a SSN
      example: '9999'
    EmailAddress:
      type: string
      description: An email address
      example: finicity@test.com
    ConsumerDateOfBirth:
      #  Note: DOB's prior to 1970 result in a negative timestamp; this is acceptable. Note: All other timestamps in Decisioning are in MST.
      $ref: '#/components/schemas/UnixDate'
    RedirectUri:
      type: string
      description: >-
        The URL that customers will be redirected to after completing Finicity
        Connect. Required unless Connect is embedded inside our application
        (iframe).
      example: 'https://www.finicity.com/connect/'
    Webhook:
      type: string
      description: >-
        The publicly available URL you want to be notified with events as the
        user progresses through the application. See [Connect Webhook
        Event](https://docs.finicity.com/connect-and-mvs-webhooks/) for event
        details.
      example: 'https://webhook.site/8d4421a7-d1d1-4f01-bb08-5370aff0321b'
    WebhookContentType:
      type: string
      description: >-
        The content type the webhook events will be sent in. Supported types:
        `application/json` and `application/xml`.
      default: application/json
      example: application/json
    WebhookData:
      type: object
      description: >-
        Allows additional identifiable information to be inserted into the
        payload of connect webhook events. See also: [Custom
        Webhooks](https://docs.finicity.com/custom-webhooks/).
    WebhookHeaders:
      type: object
      description: >-
        Allows additional identifiable information to be included as headers of
        connect webhook event. See also: [Custom
        Webhooks](https://docs.finicity.com/custom-webhooks/).
    Experience:
      type: string
      description: >-
        The `experience` field allows you to customize:  

        * Brand: color and logo

        * Icon: displayed on the "Share your data" page 

        * Popular institutions: displayed on the Bank Search page 

        * Report: the credit decisioning report to send when Connect completes. 

        * MVS modules: financial, payroll, paystub


        Note: the Finicity sales engineers (SE) help you set up a default
        experience for your company when you migrate to Connect 2.0. For each
        additional experience you create thereafter, they'll give you a unique
        ID. See [Generate 2.0 Connect URL
        APIs](https://docs.finicity.com/migrate-to-connect-web-sdk-2-0/#migrate-connect-web-sdk-1).
                    

        Experience values options: 

        * "default": your default experience (must be defined) 

        * GUID: the code for a different experience

        * Not defined: If you don't pass the experience parameter, then
        Connect's out of the box default experience (add accounts but no
        branding) is used, and the MVS modules will not run.
      example: 'default'
    SingleUseUrl:
      type: boolean
      description: >-
        `true`: The URL link expires after a Connect session successfully
        completes.


        Note: when the `singleUseUrl` and the `experience` parameters are passed
        in the same call, the `singleUseUrl` value overrides the `singleUseUrl`
        value configured in the `experience` parameter.
      example: true
    ReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    ReportConstraintsOut:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    ReportCustomField:
      type: object
      properties:
        label:
          type: string
          description: The name of the custom field
          example: 'loanID'
        value:
          type: string
          description: The value of the custom field
          example: '123456'
        shown:
          type: boolean
          description: If the custom field will show on the PDF or not
          example: true
    ReportCustomFields:
      type: array
      items:
        $ref: '#/components/schemas/ReportCustomField'
      description: >-
        The `reportCustomFields` parameter is used when experiences are
        associated with a credit decisioning report.


        Designate up to 5 custom fields that you'd like associated with the
        report when it's generated. Every custom field consists of three
        variables: `label`, `value`, and `shown`. The `shown` variable is true
        or false. 

        * `true`: (default) display the custom field in the PDF report

        * `false`: don't display the custom field in the PDF report


        For an experience that generates multiple reports, the
        `reportCustomFields` parameter gets passed to all reports.


        All custom fields display in the Reseller Billing endpoint.
    IncomeStreamConfidenceMinimum:
      type: integer
      description: >-
        Designate a minimum confidence level threshold to include income streams
        with a specified confidence level or higher. For example, designate a
        `incomeStreamConfidenceMinimum` of 50 to see all income streams with a
        confidence level of 50 or higher.
      format: int32
      example: 50
    ConnectFromDate:
      type: integer
      description: >-
        The `fromDate` parameter is used when experiences are associated with a
        credit decisioning report and any other reports with transaction data.
        The value is in epoch time and must be 10 digits. Example: 1494449017.
        If it's greater than 10 digits, then the `fromDate` is set to the credit
        decisioning report's default `fromDate`.


        For an experience that generates multiple reports, the `fromDate` gets
        passed to the reports that support it.


        However, Connect doesn't pass this parameter to the following reports:

        * Pay Statement Extraction Report 

        * VOIE - Paystub (with TXVerify) Report 

        * Statement Report 

        * Verification of Income Report 

        * VOIE - Payroll Report 


        Note: this field isn't used if you're only collecting transaction data
        without a report.
      format: int64
      example: 1607450357
    InstitutionSettings:
      type: object
      description: >-
        Advanced options for configuration of which institutions to display in.
        See [Institution
        Settings](https://docs.finicity.com/connect-institution-settings/).
    ConnectUrl:
      description: A Connect URL object
      required:
        - link
      type: object
      properties:
        link:
          $ref: '#/components/schemas/ConnectLink'
    ConnectEmailUrl:
      required:
        - link
        - emailConfig
      type: object
      properties:
        link:
          $ref: '#/components/schemas/ConnectLink'
        emailConfig:
          $ref: '#/components/schemas/EmailOptions'
    ConnectLink:
      type: string
      description: A generated Connect URL
      example: 'https://connect2.finicity.com?customerId=5025024821&institutionId=102105&origin=url&partnerId=2445583925753&signature=b5667164db7a9a0007b59267785c996ca3bc9ce97f2e72c98099cead76edfad9&timestamp=1648050761908&ttl=1648057961908&type=lite&webhookContentType=application%2Fjson'
    EmailOptions:
      description: Configuration for the Connect email's sent to customers
      required:
        - to
      type: object
      properties:
        to:
          type: string
          description:
            The email address for the customer receiving the Connect email
          example: alex.salido@finicity.com
        from:
          type: string
          description:
            The name of a person or business sending the Connect email
          example: test.lender@test.com
        supportPhone:
          type: string
          description: The support phone number listed in the email
          example: 800-555-5555
        subject:
          type: string
          description:
            The subject line of the email. The default is "Verify your Financial
            Information".
          example: Verify your income
        firstName:
          type: string
          description:
            'The first name of the customer or both names of the customers for
            joint borrowers. Example: "Marvin and Jenny".'
          example: Bob
        institutionName:
          type: string
          description: The name of your company
          example: Acme Lending
        institutionAddress:
          type: string
          description:
            The institution address to appear in the footer of the email
          example: '222 Winipeg Drive SLC UT, 84109'
        signature:
          type: array
          items:
            type: string
          description: A signature for the email
          example:
            - Cindy Mayfield
            - Senior Loan Officer
            - Direct 123-456-7890
    CustomerUsername:
      type: string
      description: >-
        The customer's username, assigned by the partner (a unique identifier),
        following these rules: minimum 6 characters maximum 255 characters any
        mix of uppercase, lowercase, numeric, and non-alphabet special
        characters ! @ . # $ % & * _ – + the use of email in this field is
        discouraged it is recommended to use a unique non-email identifier. Use
        of special characters may result in an error (e.g. í, ü, etc.)
      example: customerusername1
    FirstName:
      type: string
      description: First name(s) / given name(s)
      example: John
    LastName:
      type: string
      description: Last name(s) / surname(s)
      example: Smith
    Address:
      type: string
      description: A street address
      example: 434 W Ascension Way
    AddressLine1:
      type: string
      description: An address line 1
      example: 434 W Ascension Way
    AddressLine2:
      type: string
      description: An address line 2
      example: 'Suite #200'
    City:
      type: string
      description: A city
      example: Murray
    State:
      type: string
      description: A state
      example: UT
    Country:
      type: string
      description: A country code
      example: USA
    ZipCode:
      type: string
      description: A ZIP code
      example: '84123'
    PhoneNumber:
      type: string
      description: A phone number
      example: '1-800-986-3343'
    Suffix:
      type: string
      description: A person suffix
      example: Mr
    ApplicationId:
      type: string
      description:
        '`applicationId` value returned from the "Get App Registration Status"
        endpoint and the partner assign the customers to. This cannot be changed
        once set. Only applicable in cases of partners with multiple registered
        applications. If the partner only has one app, this can usually be
        omitted. This field is populated after the app is in a status approved.'
      example: '123456789'
    PreAppId:
      type: string
      description:
        Identifier to track the application registration from the "App
        Registration" and "Get App Registration Status" endpoints
      example: '2581'
    NumericPreAppId:
      type: integer
      format: int64
      description:
        Identifier to track the application registration from the "App
        Registration" and "Get App Registration Status" endpoints, represented
        as a number
      example: 2581
    ApplicationName:
      type: string
      description: The name of the application assigned to the customer
      example: Awesome Budget App
    UnixDate:
      type: integer
      description:
        'A date in Unix epoch time (in seconds). See also: [Handling Epoch Dates
        and Times](https://docs.finicity.com/endpoint-syntax-and-format/).'
      format: int64
      example: 1607450357
    StringUnixDate:
      type: string
      description:
        'A date in Unix epoch time (in seconds). See also: [Handling Epoch Dates
        and Times](https://docs.finicity.com/endpoint-syntax-and-format/).'
      format: int64
      example: '1607450357'
    NoZoneDateTime:
      type: string
      description: A date-time without time zone
      example: '2022-04-12T11:51:23'
    AnalyticId:
      type: string
      description: An ID for a Consumer Attributes report
      example: ce9693d5-a83e-4ad0-a694-6f48c4fc7877
    MoreResultsAvailable:
      type: boolean
      description: If `true`, you can fetch the next page of results
      example: true
    DisplayingResults:
      type: integer
      description: The number of results returned
      example: 2
    FoundResults:
      type: integer
      description: The total number of results matching search criteria
      example: 200
    Currency:
      type: string
      description: A currency code
      example: 'USD'
    CustomerType:
      type: string
      description:
        The type of Finicity customer ("active" or "testing" or "" for all
        types)
      example: active
    NewCustomer:
      description: A new customer to be enrolled
      required:
        - username
      type: object
      properties:
        username:
          $ref: '#/components/schemas/CustomerUsername'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
    CustomerUpdate:
      description: Represent an update to customer fields
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
    CreatedCustomer:
      description: A new customer that was just enrolled
      required:
        - id
        - username
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        username:
          $ref: '#/components/schemas/CustomerUsername'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
    Customer:
      description: A finicity customer record
      required:
        - id
        - username
        - type
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomerId'
        username:
          $ref: '#/components/schemas/CustomerUsername'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        type:
          $ref: '#/components/schemas/CustomerType'
        createdDate:
          $ref: '#/components/schemas/StringUnixDate'
        lastModifiedDate:
          $ref: '#/components/schemas/StringUnixDate'
    CustomerWithAppData:
      description: A finicity customer record with application info
      required:
        - id
        - username
        - firstName
        - lastName
        - type
        - createdDate
        - applicationId
        - applicationName
      allOf:
        - $ref: '#/components/schemas/Customer'
        - type: object
          properties:
            applicationId:
              $ref: '#/components/schemas/ApplicationId'
            applicationName:
              $ref: '#/components/schemas/ApplicationName'
    Customers:
      description: A list of Finicity customers
      required:
        - found
        - displaying
        - moreAvailable
        - customers
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: A list of customer records
    NewConsumer:
      description: A new consumer to be created
      required:
        - firstName
        - lastName
        - address
        - city
        - state
        - zip
        - phone
        - ssn
        - birthday
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        address:
          $ref: '#/components/schemas/Address'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        zip:
          $ref: '#/components/schemas/ZipCode'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        suffix:
          $ref: '#/components/schemas/Suffix'
    ConsumerUpdate:
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        address:
          $ref: '#/components/schemas/Address'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        zip:
          $ref: '#/components/schemas/ZipCode'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        suffix:
          $ref: '#/components/schemas/Suffix'
    CreatedConsumer:
      description: A consumer that was just created
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
    Consumer:
      description: A finicity consumer record
      required:
        - id
        - firstName
        - lastName
        - customerId
        - address
        - city
        - state
        - zip
        - phone
        - ssn
        - birthday
        - email
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        address:
          $ref: '#/components/schemas/Address'
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        zip:
          $ref: '#/components/schemas/ZipCode'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumberLastDigits'
        birthday:
          $ref: '#/components/schemas/Birthday'
        email:
          $ref: '#/components/schemas/EmailAddress'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        suffix:
          $ref: '#/components/schemas/Suffix'
    AccountOwner:
      required:
        - ownerName
        - ownerAddress
      type: object
      properties:
        ownerName:
          type: string
          description:
            The name of the account owner. Can be multiple account owners in one
            string. This is how the source data is returned from the
            institution.
          example: John Smith
        ownerAddress:
          $ref: '#/components/schemas/Address'
        asOfDate:
          $ref: '#/components/schemas/UnixDate'
      description: Owner of a customer account
    CustomerAccounts:
      description: A list of customer accounts
      required:
        - accounts
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAccount'
          description: List of customer accounts
    CustomerAccount:
      description:
        An account represents a bank account such as a checking or savings that
        the customer has added via the Connect interface.
      required:
        - id
        - number
        - accountNumberDisplay
        - name
        - balance
        - type
        - status
        - customerId
        - institutionId
        - balanceDate
        - createdDate
        - currency
        - oldestTransactionDate
        - institutionLoginId
        - displayPosition
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        number:
          type: string
          deprecated: true
          description: >-
            Use `accountNumberDisplay` field. Starting July 1, 2021 the `number`
            field will sunset with limited support until April 1, 2022, at which
            time it will be deprecated (no longer available).
          example: '2000004444'
        accountNumberDisplay:
          type: string
          description: >-
            The account number from a financial institution in truncated format:

            * Last four digits: "1234"

            * Last four digits with suffix: "1234-9"

            * Full value for string accounts: "john@gmail.com"
          example: '1234-9'
        realAccountNumberLast4:
          $ref: '#/components/schemas/AccountNumberLast4'
        name:
          type: string
          description: The account name from the institution
          example: Super Checking
        balance:
          type: number
          description: The cleared balance of the account as-of balanceDate
          example: 401.26
        type:
          $ref: '#/components/schemas/AccountType'
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        status:
          type: string
          description: >-
            "pending" during account discovery, always "active" following
            successful account activation
          example: active
        customerId:
          $ref: '#/components/schemas/CustomerId'
        institutionId:
          $ref: '#/components/schemas/InstitutionId'
        balanceDate:
          # A timestamp showing when the balance was captured
          $ref: '#/components/schemas/UnixDate'
        aggregationSuccessDate:
          # A timestamp showing the last successful aggregation of the account.
          # This will not be present until you have run your first aggregation for the account.
          $ref: '#/components/schemas/UnixDate'
        aggregationAttemptDate:
          #  A timestamp showing the last aggregation attempt
          # This will not be present until you have run your first aggregation for the account.
          $ref: '#/components/schemas/UnixDate'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        lastUpdatedDate:
          $ref: '#/components/schemas/UnixDate'
        currency:
          $ref: '#/components/schemas/Currency'
        lastTransactionDate:
          $ref: '#/components/schemas/UnixDate'
        oldestTransactionDate:
          $ref: '#/components/schemas/UnixDate'
        institutionLoginId:
          $ref: '#/components/schemas/NumericInstitutionLoginId'
        detail:
          $ref: '#/components/schemas/CustomerAccountDetail'
        position:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAccountPosition'
          description: Investment holdings
        displayPosition:
          type: integer
          description: >-
            Display position of the account at the financial institution, "1"
            being the top listed account
          format: int32
          example: 2
        parentAccount:
          # The Finicity assigned account ID for the account one level higher in the student loan account hierarchy
          $ref: '#/components/schemas/AccountId'
        financialinstitutionAccountStatus:
          description: Current account status with the financial institution
          type: string
          example: 'OPEN'
        accountNickname:
          description: Nickname for account
          type: string
          example: Checking
        marketSegment:
          description: Market segment of account
          type: string
          example: personal
    CustomerAccountPosition:
      description: Details for investment account holdings
      type: object
      properties:
        id:
          type: integer
          description: The id of the investment position
          format: int64
          example: 454678080
        description:
          type: string
          description: The description of the holding
          example: 'EMB:iShares Emerging Markets USD Bond ETF'
        cusipNo:
          type: string
          description: >-
            A nine-digit numeric or nine-character alphanumeric code that
            identifies a North American financial security (will be changed to
            SecurityIdType in the next API version, v2)
          example: '464287242'
        cusipNoType:
          type: string
          description: >-
            Type of the security, attached Finicity's cusipNo field (will be
            changed to SecurityIdType in the next API version, v2)
          example: '464287242'
        symbol:
          type: string
          description: The investment position's market/ticker symbol
          example: JPM
        units:
          type: number
          description: The quantity of investment holdings
          example: 3.54117
        currentPrice:
          type: number
          description: The current price of the investment holding
          example: 49.01
        securityName:
          type: string
          description: The security name for the investment holding
          example: JPMORGAN CHASE & CO
        transactionType:
          type: string
          description:
            'The transaction type of the holding. Cash, Margin, POSSTOCK, Etc'
          example: Cash
        marketValue:
          type: number
          description:
            Market value of an investment position at the time of retrieval
          example: 914.2
        costBasis:
          type: number
          description: The total cost of acquiring the security
          example: 925.5
        status:
          type: string
          description: The status of the holding
          example: A
        currentPriceDate:
          # The latest date the price date was updated
          $ref: '#/components/schemas/UnixDate'
        invSecurityType:
          type: string
          description: The investment holding security type
          example: OTHERINFO
        mfType:
          type: string
          description: 'Type of mutual fund (e.g., open-ended)'
          example: Open-Ended
        posType:
          type: string
          description: Fund Type assigned by the FI (long or short)
          example: Long
        totalGLDollar:
          type: number
          description:
            'Total Gain/Loss of the position, at the time of aggregation ($)'
          example: 81.83
        totalGLPercent:
          type: number
          description:
            'Total Gain/Loss of the position, at the time of aggregation (%)'
          example: 43.07
    CustomerAccountDetail:
      description: >-
        Additional customer account details. Not all data points will return for
        each account type. You can see the account type that each data point
        will return for in descriptions. The data point are also subject to
        availability by the institution.
      required:
        - availableBalanceAmount
      type: object
      properties:
        postedDate:
          # (All Account Types) Most recent date of the following information
          $ref: '#/components/schemas/UnixDate'
        availableBalanceAmount:
          type: number
          description: >-
            (Checking/Savings/CD/MoneyMarket) and (Mortgage/Loan)  The available
            balance (typically the current balance with adjustments for any
            pending transactions)
          example: 5678.78
        openDate:
          # Checking/Savings/CD/MoneyMarket
          $ref: '#/components/schemas/UnixDate'
        periodStartDate:
          # Checking/Savings/CD/MoneyMarket
          $ref: '#/components/schemas/UnixDate'
        periodEndDate:
          $ref: '#/components/schemas/UnixDate'
        periodInterestRate:
          type: number
          description: >-
            (Checking/Savings/CD/MoneyMarket) The APY for the current period
            interest rate
          example: 13.245
        periodDepositAmount:
          type: number
          description:
            (Checking/Savings/CD/MoneyMarket) Amount deposited in period
          example: 2356.56
        periodInterestAmount:
          type: number
          description: >-
            (Checking/Savings/CD/MoneyMarket) Interest accrued during the
            current period
          example: 1234.56
        interestYtdAmount:
          type: number
          description:
            (Checking/Savings/CD/MoneyMarket) Interest accrued year-to-date
          example: 1056.67
        interestPriorYtdAmount:
          type: number
          description:
            (Checking/Savings/CD/MoneyMarket) Interest earned in prior year
          example: 3056.79
        maturityDate:
          # Checking/Savings/CD/MoneyMarket
          $ref: '#/components/schemas/UnixDate'
        interestRate:
          type: string
          description: >-
            (Credit Card/Line Of Credit) and (Mortgage/Loan) The account's
            current interest rate
          example: '15.789'
        creditAvailableAmount:
          type: number
          description: >-
            (Credit Card/Line Of Credit) The available credit (typically the
            credit limit minus the current balance)
          example: 3000
        creditMaxAmount:
          type: number
          description: (Credit Card/Line Of Credit) The account's credit limit
          example: 7000
        cashAdvanceAvailableAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) Currently available cash advance
          example: 2000
        cashAdvanceMaxAmount:
          type: number
          description: (Credit Card/Line Of Credit) Maximum cash advance amount
          example: 3000
        cashAdvanceBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) Balance of current cash advance
          example: 1000
        cashAdvanceInterestRate:
          type: number
          description:
            (Credit Card/Line Of Credit) Interest rate for cash advances
          example: 21.5
        currentBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) and (Investment) Current balance
          example: 5789.34
        paymentMinAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) and (Mortgage/Loan) Minimum payment due
          example: 456.78
        paymentDueDate:
          # Credit Card/Line Of Credit
          $ref: '#/components/schemas/UnixDate'
        previousBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) Prior balance in last statement
          example: 1234.56
        statementStartDate:
          # Credit Card/Line Of Credit
          $ref: '#/components/schemas/UnixDate'
        statementEndDate:
          # Credit Card/Line Of Credit
          $ref: '#/components/schemas/UnixDate'
        statementPurchaseAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) Purchase amount of statement period
          example: 2345.9
        statementFinanceAmount:
          type: number
          description:
            (Credit Card/Line Of Credit) Finance amount of statement period
          example: 156.78
        statementCreditAmount:
          type: number
          description: >-
            (Credit Card/Line Of Credit) Credit amount applied in statement
            period
          example: 345
        rewardEarnedBalance:
          type: integer
          description: (Credit Card/Line Of Credit) Earned reward balance
          format: int32
          example: 500
        pastDueAmount:
          type: number
          description: (Credit Card/Line Of Credit) Balance past due
          example: 3688.99
        lastPaymentAmount:
          type: number
          description: >-
            (Credit Card/Line Of Credit) and (Mortgage/Loan) The amount received
            in the last payment
          example: 567.89
        lastPaymentDate:
          # Credit Card/Line Of Credit
          $ref: '#/components/schemas/UnixDate'
        statementCloseBalance:
          type: number
          description:
            (Credit Card/Line Of Credit) Balance of statement at close
          example: 2456.69
        termOfMl:
          type: string
          description: (Mortgage/Loan) Length of loan in months
          example: '36'
        mlHolderName:
          type: string
          description: (Mortgage/Loan) Holder of the mortgage or loan
          example: John Smith
        description:
          type: string
          description: (Mortgage/Loan) Description of loan
          example: a description
        lateFeeAmount:
          type: number
          description: (Mortgage/Loan) Late fee charged
          example: 35
        payoffAmount:
          type: number
          description: (Mortgage/Loan) The amount required to payoff the loan
          example: 45567.98
        payoffAmountDate:
          # (Mortgage/Loan) Date of final payment
          $ref: '#/components/schemas/UnixDate'
        originalMaturityDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        principalBalance:
          type: number
          description: (Mortgage/Loan) The principal balance
          example: 45056.7
        escrowBalance:
          type: number
          description: (Mortgage/Loan) The escrow balance
          example: 2345.01
        interestPeriod:
          type: string
          description: (Mortgage/Loan) Period of interest
          example: monthly
        initialMlAmount:
          type: number
          description: (Mortgage/Loan) Original loan amount
          example: 65000
        initialMlDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        nextPaymentPrincipalAmount:
          type: number
          description: (Mortgage/Loan) Amount towards principal in next payment
          example: 1256.67
        nextPaymentInterestAmount:
          type: number
          description: (Mortgage/Loan) Amount of interest in next payment
          example: 234.56
        nextPayment:
          type: number
          description: (Mortgage/Loan) Minimum payment due
          example: 1578
        nextPaymentDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        lastPaymentDueDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        lastPaymentReceiveDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        lastPaymentPrincipalAmount:
          type: number
          description: (Mortgage/Loan) Amount towards principal in last payment
          example: 1256.67
        lastPaymentInterestAmount:
          type: number
          description: (Mortgage/Loan) Amount of interest in last payment
          example: 234.56
        lastPaymentEscrowAmount:
          type: number
          description: (Mortgage/Loan) Amount towards escrow in last payment
          example: 456.78
        lastPaymentLastFeeAmount:
          type: number
          description: (Mortgage/Loan) Amount of last fee in last payment
          example: 150
        lastPaymentLateCharge:
          type: number
          description: (Mortgage/Loan) Amount of late charge in last payment
          example: 50
        ytdPrincipalPaid:
          type: number
          description: (Mortgage/Loan) Principal paid year-to-date
          example: 5432.01
        ytdInterestPaid:
          type: number
          description: (Mortgage/Loan) Interest paid year-to-date
          example: 3948.56
        ytdInsurancePaid:
          type: number
          description: (Mortgage/Loan) Insurance paid year-to-date
          example: 1345.89
        ytdTaxPaid:
          type: number
          description: (Mortgage/Loan) Tax paid year-to-date
          example: 1489
        autoPayEnrolled:
          type: boolean
          description: (Mortgage/Loan) Enrolled in autopay (F/Y)
          example: true
        collateral:
          type: string
          description: (Mortgage/Loan) Collateral on loan
          example: nissan sentra
        currentSchool:
          type: string
          description: (Mortgage/Loan) Current school
          example: utah valley university
        firstPaymentDate:
          # Mortgage/Loan
          $ref: '#/components/schemas/UnixDate'
        firstMortgage:
          type: boolean
          description: (Mortgage/Loan) First mortgage (F/Y)
          example: true
        loanPaymentFreq:
          type: string
          description: '(Mortgage/Loan) Frequency of payments (monthly, etc.)'
          example: monthly
        originalSchool:
          type: string
          description: (Mortgage/Loan) Original school
          example: brigham young university
        recurringPaymentAmount:
          type: number
          description: (Mortgage/Loan) Recurring payment amount
          example: 456.23
        lender:
          type: string
          description: (Mortgage/Loan) Owner of loan
          example: utah community credit union
        endingBalanceAmount:
          type: number
          description: (Mortgage/Loan) Ending balance
          example: 234789.45
        loanTermType:
          type: string
          description: (Mortgage/Loan) Type of loan term
          example: fixed
        paymentsMade:
          type: integer
          description: (Mortgage/Loan) Number of payments made
          format: int32
          example: 14
        balloonAmount:
          type: number
          description: (Mortgage/Loan) Balloon payment amount
          example: 1678.56
        projectedInterest:
          type: number
          description: (Mortgage/Loan) Projected interest on the loan
          example: 10456.78
        interestPaidLtd:
          type: number
          description:
            (Mortgage/Loan) Interest paid since inception of loan (life to date)
          example: 56789.34
        interestRateType:
          type: string
          description: (Mortgage/Loan) Type of interest rate
          example: variable
        loanPaymentType:
          type: string
          description: (Mortgage/Loan) Type of loan payment
          example: principle
        repaymentPlan:
          type: string
          description:
            (Mortgage/Loan) Type of repayment plan for the student loan
          example: 'Standard, Graduated, Extended, Pay As You Earn, and more.'
        paymentsRemaining:
          type: integer
          description:
            (Mortgage/Loan) Number of payments remaining before loan is paid off
          format: int32
          example: 45
        interestMarginBalance:
          type: number
          description:
            (Investment) Net interest earned after deducting interest paid out
          example: 456
        shortBalance:
          type: number
          description: (Investment) Sum of short balance
          example: 12456.89
        availableCashBalance:
          type: number
          description: (Investment) Amount available for cash withdrawal
          example: 3456.78
        maturityValueAmount:
          type: number
          description: (Investment) amount payable to an investor at maturity
          example: 34067.78
        vestedBalance:
          type: number
          description: (Investment) Vested amount in account
          example: 45000
        empMatchAmount:
          type: number
          description: (Investment) Employer matched contributions
          example: 256.99
        empPretaxContribAmount:
          type: number
          description: (Investment) Employer pretax contribution amount
          example: 450
        empPretaxContribAmountYtd:
          type: number
          description:
            (Investment) Employer pretax contribution amount year to date
          example: 700
        contribTotalYtd:
          type: number
          description: (Investment) Total year to date contributions
          example: 2045
        cashBalanceAmount:
          type: number
          description: (Investment) Cash balance of account
          example: 2000
        preTaxAmount:
          type: number
          description: (Investment) Pre tax amount of total balance
          example: 78564.99
        afterTaxAmount:
          type: number
          description: (Investment) Post tax amount of total balance
          example: 68564.99
        matchAmount:
          type: number
          description: (Investment) Amount matched
          example: 378
        profitSharingAmount:
          type: number
          description: (Investment) Amount of balance for profit sharing
          example: 34678.89
        rolloverAmount:
          type: number
          description: >-
            (Investment) Amount of balance rolled over from original account
            (401k, etc.)
          example: 101234.67
        otherVestAmount:
          type: number
          description: (Investment) Other vested amount
          example: 34000
        otherNonvestAmount:
          type: number
          description: (Investment) Other nonvested amount
          example: 26000
        currentLoanBalance:
          type: number
          description: (Investment) Current loan balance
          example: 345789.23
        loanRate:
          type: number
          description: (Investment) Interest rate of loan
          example: 3.275
        buyPower:
          type: number
          description: (Investment) Money available to buy securities
          example: 34567.89
        rolloverLtd:
          type: number
          description: (Investment) Life to date of money rolled over
          example: 23456.78
        loanAwardId:
          type: string
          description: (Student Loan) The federal unique loan identifying number
          example: '1234568'
        originalInterestRate:
          type: number
          description: >-
            (Student Loan) The original interest rate to which the loan was
            disbursed, in APY
          example: 12
        guarantor:
          type: string
          description: >-
            (Student Loan) The financial institution guarantor of the loan (who
            will pay the loan amount to the owner if the borrower defaults)
          example: 'FinBank'
        interestSubsityType:
          type: string
          description: >-
            (Student Loan) The indication of the presence of an interest subsidy
            (i.e. subsidized)
          example: Subsity type
        interestBalance:
          type: number
          description: (Student Loan) The total outstanding interest balance
          example: 2000
        feesBalance:
          type: number
          description: (Student Loan) The total outstanding fees balance
          example: 150
        loanStatus:
          type: string
          description: >-
            (Student Loan) The repayment status phase (i.e. In School, Grace,
            Repayment, Deferment, Forbearance)
          example: Deferment
        loanStatusStartDate:
          # Student Loan
          $ref: '#/components/schemas/UnixDate'
        loanStatusEndDate:
          # Student Loan
          $ref: '#/components/schemas/UnixDate'
        weightedInterestRate:
          type: number
          description: >-
            (Student Loan) The interest rate of multiple interest rates and
            balances at the group level, in APY
          example: 12
        repaymentPlanStartDate:
          # Student Loan
          $ref: '#/components/schemas/UnixDate'
        repaymentPlanEndDate:
          # Student Loan
          $ref: '#/components/schemas/UnixDate'
        outOfSchoolDate:
          # Student Loan. The date the borrower graduated or dropped below half-time enrollment in school
          $ref: '#/components/schemas/UnixDate'
        convertToRepayment:
          # Student Loan. The date the loan enters into repayment
          $ref: '#/components/schemas/UnixDate'
        daysDelinquent:
          type: integer
          description: >-
            (Student Loan) The number of days past a due date that a payment
            should have been made
          format: int32
          example: 5
        totalPrincipalPaid:
          type: number
          description:
            (Student Loan) The total amount paid towards the principal balance
          example: 15000
        totalInterestPaid:
          type: number
          description: (Student Loan) The total amount paid towards interest
          example: 1125
        totalAmountPaid:
          type: number
          description: (Student Loan) The total amount paid
          example: 16125
    Application:
      required:
        - appDescription
        - appName
        - appUrl
        - ownerAddressLine1
        - ownerAddressLine2
        - ownerCity
        - ownerCountry
        - ownerName
        - ownerPostalCode
        - ownerState
        - image
      type: object
      properties:
        appDescription:
          type: string
          description:
            A short description of the app. This will be visible to end users in
            the FI interface.
          example: 'The app that makes your budgeting experience awesome'
        appName:
          $ref: '#/components/schemas/ApplicationName'
        appUrl:
          type: string
          description:
            An URL for the app. This will be visible to end users in the FI
            interface.
          example: 'https://www.finicity.com/'
        ownerAddressLine1:
          $ref: '#/components/schemas/AddressLine1'
        ownerAddressLine2:
          $ref: '#/components/schemas/AddressLine2'
        ownerCity:
          type: string
          description: >-
            City for the business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: Murray
        ownerCountry:
          type: string
          description: >-
            Country for the  business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: USA
        ownerName:
          type: string
          description: >-
            Business name for the business entity that owns the app. Information
            for registration purposes only and not given to the end user.
          example: Finicity
        ownerPostalCode:
          type: string
          description: >-
            Zip code for the business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: '84123'
        ownerState:
          type: string
          description: >-
            State for the business entity that owns the app. Information for
            registration purposes only and not given to the end user.
          example: UT
        image:
          type: string
          description:
            An app logo passed as a Base64 encoded image (1:1 SVG file, must be
            less than 50KB)
          example: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K'
    RegisteredApplication:
      required:
        - preAppId
        - status
      type: object
      properties:
        preAppId:
          $ref: '#/components/schemas/NumericPreAppId'
        status:
          $ref: '#/components/schemas/AppRegistrationStatus'
    AppStatuses:
      description: >-
        The response for the "Get App Registration Status" endpoint which
        returns an array of status objects
      required:
        - totalRecords
        - totalPages
        - pageNumber
        - numberOfRecordsPerPage
        - applications
      type: object
      properties:
        totalRecords:
          type: integer
          description: The total number of results
          format: int64
          example: 50
        totalPages:
          type: integer
          description: The total number of pages
          format: int64
          example: 5
        pageNumber:
          type: integer
          description: The current page number
          format: int64
          example: 2
        numberOfRecordsPerPage:
          type: integer
          description: The number of results per page
          format: int64
          example: 10
        applications:
          description: A list of applications with their statuses
          type: array
          items:
            $ref: '#/components/schemas/AppStatus'
    AppRegistrationStatus:
      description:
        The status of an app registration request. "A" means approved. "P" means
        pending which is the status when initially submitted or when the app is
        modified and awaiting approval. "R" means rejected. If it is rejected
        there will be a note with the rejected reason.
      type: string
      example: P
    AppStatus:
      description: Registration status details for the application
      required:
        - partnerId
        - preAppId
        - appName
        - submittedDate
        - modifiedDate
        - status
      type: object
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        preAppId:
          $ref: '#/components/schemas/PreAppId'
        note:
          type: string
          description:
            A note on the registration. Typically used to indicate reasons for
            rejected apps.
          example: Approved
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        appName:
          $ref: '#/components/schemas/ApplicationName'
        submittedDate:
          $ref: '#/components/schemas/UnixDate'
        modifiedDate:
          $ref: '#/components/schemas/UnixDate'
        status:
          $ref: '#/components/schemas/AppRegistrationStatus'
        scopes:
          type: string
          description: Indicates scopes of data accessible to the app
          example: Account Info
        institutionDetails:
          type: array
          items:
            $ref: '#/components/schemas/AppFinancialInstitutionStatus'
          description:
            A list of the registration status for each FI for the application
    AppFinancialInstitutionStatus:
      description: >-
        The registration status fields for each specific OAuth financial
        institution
      required:
        - id
        - decryptionKeyActivated
        - createdDate
        - lastModifiedDate
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        abbrvName:
          type: string
          description: The application's abbreviated name
          example: VAEJ
        logoUrl:
          type: string
          description: An URL to a logo file
          example: >-
            https://prod-direct-integration-client.s3.us-west-2.amazonaws.com/976521f99-7b36-4b3b-a3e0-faff9545836d/102224/90x90.png
        decryptionKeyActivated:
          type: boolean
          description:
            Status of decryption keys for financial institution app registration
          example: false
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        lastModifiedDate:
          $ref: '#/components/schemas/UnixDate'
        status:
          type: boolean
          description: '`false` indicates registration is still pending'
          example: true
    Branding:
      type: object
      properties:
        logo:
          type: string
          description: >-
            File path of the institution's logo. For white backgrounds designed
            at 375 x 72, has built in spacing around it to normalize brand
            sizing.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/logo.svg
        alternateLogo:
          type: string
          description: >-
            File path of the institution's alternate logo. For colored
            backgrounds designed at 375 x 72 has built in spacing around it to
            normalize brand sizing.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/alternateLogo.svg
        icon:
          type: string
          description: >-
            File path of the institution's icon. For search results designed at
            40 x 40.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/icon.svg
        primaryColor:
          type: string
          description: Hex code for the institution's primary color
          example: '#0167AE'
        tile:
          type: string
          description: >-
            File path of institution name logo. For popular banks designed at
            160 x 72.
          example: >-
            https://prod-carpintero-branding.s3.us-west-2.amazonaws.com/5/tile.svg
      description:
        All assets are SVGs so can be slightly resized without any issues.
    BrandingWrapper:
      required:
        - branding
      type: object
      properties:
        branding:
          $ref: '#/components/schemas/Branding'
    InstitutionAddress:
      type: object
      description: The address of a financial institution
      properties:
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        country:
          $ref: '#/components/schemas/Country'
        postalCode:
          $ref: '#/components/schemas/ZipCode'
        addressLine1:
          $ref: '#/components/schemas/AddressLine1'
        addressLine2:
          $ref: '#/components/schemas/AddressLine2'
    Institutions:
      description:
        A list of Finicity financial institutions from the "Get Institutions"
        API
      required:
        - found
        - displaying
        - moreAvailable
        - createdDate
        - institutions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        institutions:
          description: A list of institutions
          maxItems: 1000
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Institution'
    InstitutionWrapper:
      type: object
      required:
        - institution
      properties:
        institution:
          $ref: '#/components/schemas/Institution'
    Institution:
      description: A financial institution
      required:
        - id
        - transAgg
        - ach
        - stateAgg
        - voi
        - voa
        - aha
        - availBalance
        - accountOwner
        - oauthEnabled
        - currency
        - status
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        name:
          $ref: '#/components/schemas/InstitutionName'
        transAgg:
          $ref: '#/components/schemas/InstitutionTransAgg'
        ach:
          $ref: '#/components/schemas/InstitutionAch'
        stateAgg:
          $ref: '#/components/schemas/InstitutionStateAgg'
        voi:
          $ref: '#/components/schemas/InstitutionVoi'
        voa:
          $ref: '#/components/schemas/InstitutionVoa'
        aha:
          $ref: '#/components/schemas/InstitutionAha'
        availBalance:
          $ref: '#/components/schemas/InstitutionAvailableBalance'
        accountOwner:
          $ref: '#/components/schemas/InstitutionAccountOwner'
        accountTypeDescription:
          type: string
          description: >-
            Values: Banking, Investments, Credit Cards/Accounts, Workplace
            Retirement, Mortgages and Loans, Insurance
          example: 'Workplace Retirement'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        urlHomeApp:
          type: string
          description: The URL of the institution's primary home page
          example: 'https://www.example.com/home'
        urlLogonApp:
          type: string
          description: The URL of the institution's login page
          example: 'https://www.example.com/login'
        oauthEnabled:
          type: boolean
          description: '`true`: The institution is an OAuth connection'
          example: true
        urlForgotPassword:
          type: string
          description: Institution's forgot password page
          example: 'https://www.example.com/forgotPassword.do'
        urlOnlineRegistration:
          type: string
          description: Institution's signup page
          example: 'https://www.example.com/signup'
        class:
          type: string
          description: Institution's class
          example: 'retirement'
        specialText:
          type: string
          description: Special instructions given to customers for login
          example:
            'Please enter your Principal Financial - Retirement (Personal)
            Username and Password.'
        specialInstructions:
          type: array
          items:
            type: string
          description: >-
            Instructions given to the customer before they are sent to the
            institution website to login for OAuth institutions.


            Note: this helps the customer to provide the proper permission for
            data needed for the application.
          example:
            - Account details
            - Balances and transactions
            - Personal and account ownership info
        address:
          $ref: '#/components/schemas/InstitutionAddress'
        currency:
          $ref: '#/components/schemas/Currency'
        email:
          $ref: '#/components/schemas/EmailAddress'
        status:
          type: string
          description:
            "Institution's status: online, offline, maintenance, testing"
          example: online
        newInstitutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
          # The new id for the financial institution's ID you are replacing. This is the same as the `oauthInstitutionId`
          # field, which will eventually be replaced by this field.
        branding:
          $ref: '#/components/schemas/Branding'
        oauthInstitutionId:
          # The new ID for the OAuth institution's ID you are replacing.
          $ref: '#/components/schemas/NumericInstitutionId'
    Subscription:
      type: object
      description:
        A subscription the partner has created to be alerted of changes to
        production status of financial institutions, products, and certification
        and decertification of products.
      properties:
        partnerId:
          $ref: '#/components/schemas/PartnerId'
        webhookUrl:
          type: string
          description: Partner webhook HTTPS URL where events will be sent
          example: https://acmewebhooks.com
        createdAt:
          type: string
          description: Date the subscription was created.
          example: '2022-03-28T21:48:31.000Z'
        updatedAt:
          type: string
          description: Date the subscription was last updated
          example: '2022-03-28T21:48:31.000Z'
    CertifiedInstitutions:
      description:
        A list of Finicity financial institutions from the "Get Certified
        Institutions" API
      required:
        - found
        - displaying
        - moreAvailable
        - requestedDate
        - institutions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        requestedDate:
          $ref: '#/components/schemas/UnixDate'
        institutions:
          description: A list of institutions
          maxItems: 1000
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/CertifiedInstitution'
    CertifiedInstitution:
      required:
        - name
        - id
        - transAgg
        - ach
        - stateAgg
        - voi
        - voa
        - aha
        - availBalance
        - accountOwner
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        rssd:
          $ref: '#/components/schemas/Rssd'
        name:
          $ref: '#/components/schemas/InstitutionName'
        transAgg:
          $ref: '#/components/schemas/InstitutionTransAgg'
        ach:
          $ref: '#/components/schemas/InstitutionAch'
        stateAgg:
          $ref: '#/components/schemas/InstitutionStateAgg'
        voi:
          $ref: '#/components/schemas/InstitutionVoi'
        voa:
          $ref: '#/components/schemas/InstitutionVoa'
        aha:
          $ref: '#/components/schemas/InstitutionAha'
        availBalance:
          $ref: '#/components/schemas/InstitutionAvailableBalance'
        accountOwner:
          $ref: '#/components/schemas/InstitutionAccountOwner'
        childInstitutions:
          description: An array of child financial institutions
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ChildInstitution'
    ChildInstitution:
      required:
        - rssd
        - parentRSSD
        - name
        - institutionId
      type: object
      properties:
        rssd:
          $ref: '#/components/schemas/Rssd'
        parentRSSD:
          $ref: '#/components/schemas/Rssd'
        name:
          $ref: '#/components/schemas/InstitutionName'
        institutionId:
          $ref: '#/components/schemas/NumericInstitutionId'
    AccountDetail:
      required:
        - interestMarginBalance
        - availableCashBalance
        - vestedBalance
        - currentLoanBalance
        - availableBalanceAmount
      type: object
      properties:
        interestMarginBalance:
          type: number
          description: >-
            Only available for investment accounts. Net interest earned after
            deducting interest paid out
          example: -50000
        availableCashBalance:
          type: number
          description: >-
            Only available for investment accounts. Amount available for cash
            withdrawal
          example: 1500
        vestedBalance:
          type: number
          description:
            Only available for investment accounts. Vested amount in account
          example: 300000
        currentLoanBalance:
          type: number
          description:
            Only available for investment accounts. Current loan balance
          example: 0
        availableBalanceAmount:
          type: number
          description: The available balance for the account
          example: 1000
    BaseReportData:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        portfolioId:
          $ref: '#/components/schemas/PortfolioId'
        customerType:
          $ref: '#/components/schemas/CustomerType'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        title:
          $ref: '#/components/schemas/ReportTitle'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        consumerSsn:
          $ref: '#/components/schemas/SocialSecurityNumberLastDigits'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        errors:
          description: In case errors occurred during the report generation
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    ReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/ReportConstraintsOut'
    NetMonthly:
      required:
        - month
        - net
      type: object
      properties:
        month:
          # Timestamp for the first day of this month
          $ref: '#/components/schemas/UnixDate'
        net:
          type: number
          description:
            Total income during the given month, across all income streams
          example: 2004.77
    PortfolioReport:
      required:
        - id
        - portfolioId
        - type
        - status
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        portfolioId:
          $ref: '#/components/schemas/PortfolioId'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
    Transaction:
      required:
        - id
        - amount
        - accountId
        - customerId
        - status
        - description
        - postedDate
        - createdDate
        - categorization
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        amount:
          type: number
          description: >-
            The total amount of the transaction. Transactions for deposits are
            positive values, withdrawals and debits are negative values.
          example: 3678.9
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        status:
          type: string
          description:
            One of active, pending, or shadow (see [Pending and Shadow
            Transactions](https://docs.finicity.com/pending-and-shadow-transactions/))
          example: active
        description:
          type: string
          description: >-
            The description of the transaction, as provided by the institution
            (often known as payee). In the event that this field is left blank
            by the institution, Finicity will pass a value of "No description
            provided by institution". All other values are provided by the
            institution.
          example: MAD SCIENCE RESEARCH PR PAYMENT
        memo:
          type: string
          description: >-
            The memo field of the transaction, as provided by the institution.
            The institution must provide either a description, a memo, or both.
            It is recommended to concatenate the two fields into a single value
          example: PPD ID 098749
        postedDate:
          $ref: '#/components/schemas/UnixDate'
        transactionDate:
          $ref: '#/components/schemas/UnixDate'
        effectiveDate:
          $ref: '#/components/schemas/UnixDate'
        firstEffectiveDate:
          $ref: '#/components/schemas/UnixDate'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        type:
          $ref: '#/components/schemas/TransactionType'
        checkNum:
          type: integer
          description:
            'The check number of the transaction, as provided by the institution'
          format: int32
          example: 1876
        escrowAmount:
          type: number
          description:
            'The portion of the transaction allocated to escrow, if available'
          example: 134.01
        feeAmount:
          type: number
          description:
            'The portion of the transaction allocated to fee, if available'
          example: 25
        interestAmount:
          type: number
          description:
            'The portion of the transaction allocated to interest, if available'
          example: 256.78
        principalAmount:
          type: number
          description:
            'The portion of the transaction allocated to principal, if available'
          example: 1345.56
        unitQuantity:
          type: integer
          description: >-
            The number of units (e.g. individual shares) in the transaction, if
            available
          format: int32
          example: 50
        unitPrice:
          type: number
          description:
            'Share Price for investment unit (e.g., stocks, mutual funds)'
          example: 5
        categorization:
          $ref: '#/components/schemas/Categorization'
        subaccountSecurityType:
          type: string
          description: The type of sub account from which funds came
          example: Cash
        commissionAmount:
          type: integer
          description: Transaction commission
          format: int32
          example: 0
        ticker:
          type: string
          description:
            Ticker symbol for the investment related to the transaction
          example: DAL
        investmentTransactionType:
          type: string
          description: >-
            Finicity derived field that normalizes the transaction type from the
            FI
          example: purchased
        taxesAmount:
          type: integer
          description: Taxes applicable to the investment trade
          format: int32
          example: 0
        currencySymbol:
          type: string
          description: >-
            If the foreign amount value is present then this is the currency
            code of that foreign amount
          example: USD
    PortfolioSummary:
      required:
        - portfolioId
        - reports
      type: object
      properties:
        portfolioId:
          $ref: '#/components/schemas/PortfolioId'
        reports:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioReport'
          description: A list of reports in the portfolio
    PortfolioWithConsumerSummary:
      required:
        - portfolioId
        - consumer
        - reports
      allOf:
        - $ref: '#/components/schemas/PortfolioSummary'
        - type: object
          properties:
            consumer:
              $ref: '#/components/schemas/PortfolioConsumer'
    ReportSummaries:
      required:
        - reports
      type: object
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummary'
          description: Data pertaining to each report
    TxVerifyInterview:
      required:
        - assetId
      type: object
      properties:
        assetId:
          $ref: '#/components/schemas/AssetId'
        accounts:
          $ref: '#/components/schemas/ReportAccountIds'
    Categorization:
      required:
        - normalizedPayeeName
        - category
        - country
      type: object
      properties:
        normalizedPayeeName:
          type: string
          description:
            A normalized payee, derived from the transaction's description and
            memo fields
          example: Mad Science Research
        category:
          type: string
          description:
            One of the values from Categories (assigned based on the payee name)
          example: Paycheck
        city:
          $ref: '#/components/schemas/City'
        state:
          $ref: '#/components/schemas/State'
        postalCode:
          $ref: '#/components/schemas/ZipCode'
        country:
          $ref: '#/components/schemas/Country'
        bestRepresentation:
          description: A descriptive string
          type: string
          example: YOU BOUGHT DELTA AIR LINES INC DAL CASH
      description: Categorization Record
    ReportIncomeStream:
      required:
        - id
        - name
        - status
        - estimateInclusion
        - confidence
        - cadence
        - netMonthly
        - netAnnual
        - projectedNetAnnual
        - estimatedGrossAnnual
        - projectedGrossAnnual
        - averageMonthlyIncomeNet
        - transactions
      type: object
      properties:
        id:
          type: string
          description: Finicity's income stream ID
          example: dens28i3vsch-voi1
        name:
          type: string
          description: >-
            A human-readable name based on the normalizedPayee name of the
            transactions for this income stream
          example: none
        status:
          $ref: '#/components/schemas/Status'
        estimateInclusion:
          $ref: '#/components/schemas/EstimateInclusion'
        confidence:
          type: integer
          description:
            Level of confidence that the deposit stream represents income
          format: int32
          example: 85
        cadence:
          $ref: '#/components/schemas/CadenceDetails'
        netMonthly:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NetMonthly'
          description: >-
            A list of net monthly records. One instance for each complete
            calendar month in the report
        netAnnual:
          type: number
          description:
            Sum of all values in netMonthlyIncome over the previous 12 months
          example: 110475.7
        projectedNetAnnual:
          type: number
          description: >-
            Projected net income over the next 12 months, across all income
            streams, based on netAnnualIncome
          example: 0
        estimatedGrossAnnual:
          type: number
          description: >-
            Before-tax gross annual income (estimated from netAnnual) across all
            income stream in the past 12 months
          example: 100000
        projectedGrossAnnual:
          type: number
          description: >-
            Projected gross income over the next 12 months, across all active
            income streams, based on projectedNetAnnual
          example: 151609
        averageMonthlyIncomeNet:
          type: number
          description: Monthly average amount over the previous 24 months
          example: 9206.31
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: A list of transaction records
    ReportTransaction:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        amount:
          type: number
          description: >-
            The total amount of the transaction. Transactions for deposits are
            positive values, withdrawals and debits are negative values.
          example: 22.21
        postedDate:
          # When the transaction was posted or cleared by the institution.
          $ref: '#/components/schemas/UnixDate'
        description:
          type: string
          description: >-
            The description of the transaction, as provided by the institution
            (often known as payee). In the event that this field is left blank
            by the institution, Finicity will pass a value of "No description
            provided by institution". All other values are provided by the
            institution.
          example: FINICITY INC PAYROLL
        memo:
          type: string
          description: >-
            The memo field of the transaction, as provided by the institution.
            The institution must provide either a description, a memo, or both.
            It is recommended to concatenate the two fields into a single value
          example: Finicity amount credit
        normalizedPayee:
          type: string
          description: >-
            A normalized payee, derived from the transaction's description and
            memo fields.
          example: Finicity
        institutionTransactionId:
          type: string
          description:
            The unique identifier given by the FI for each transaction.
          example: '100000000'
        category:
          type: string
          description: The categorization of the transaction.
          example: Paycheck
        type:
          $ref: '#/components/schemas/TransactionType'
        payStatementMatchTypes:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransactionPayStatementMatchTypes'
          description:
            Field to indicate how transaction is matched with pay statement
        bestRepresentation:
          type: string
          description: >-
            Combines the description and memo data together, removes any
            duplicated information from description to memo, and removes any
            numbers or special characters
          example: FINICITY INC PAYROLL
        securityType:
          type: string
          description: The type of investment security (VOA only)
          example: Cash
        symbol:
          type: string
          description: Investment symbol (VOA only)
          example: JPM
        commission:
          description: Commission amount
          type: number
          example: 0
    Birthday:
      type: object
      properties:
        year:
          type: integer
          description: The birthday 4-digit year
          format: int32
          example: 1989
        month:
          type: integer
          description: The birthday 2-digit month (1 is January)
          format: int32
          example: 8
        dayOfMonth:
          type: integer
          description: The birthday 2-digit day-of-month
          format: int32
          example: 13
      description: A birth date
    ExtractEarnings:
      type: boolean
      description:
        Field to indicate whether to extract the earnings on all pay statements
      default: true
      example: true
    ExtractDeductions:
      type: boolean
      description:
        Field to indicate whether to extract the deductions on all pay
        statements
      default: false
      example: true
    ExtractDirectDeposit:
      type: boolean
      description:
        Field to indicate whether to extract the direct deposits on all pay
        statements
      default: true
      example: true
    TxPushCallbackUrl:
      type: string
      description: A callback URL where to receive TxPush notifications
      example: 'https://www.mydomain.com/txpush/listener'
    PayStatementData:
      required:
        - assetIds
      type: object
      properties:
        assetIds:
          description: A list of pay statement asset IDs
          type: array
          items:
            $ref: '#/components/schemas/AssetId'
        extractEarnings:
          $ref: '#/components/schemas/ExtractEarnings'
        extractDeductions:
          $ref: '#/components/schemas/ExtractDeductions'
        extractDirectDeposit:
          $ref: '#/components/schemas/ExtractDirectDeposit'
    CadenceDetails:
      type: object
      properties:
        startDate:
          # Date of the first deposit transaction
          $ref: '#/components/schemas/UnixDate'
        stopDate:
          # Date of the final deposit transaction (omitted if status is active)
          $ref: '#/components/schemas/UnixDate'
        days:
          type: integer
          description: Number of days between the recurring deposits
          format: int32
          example: 14
    AuditableReport:
      description: A report
      required:
        - id
        - customerId
        - requesterName
        - requestId
        - type
        - status
        - createdDate
        - constraints
        - customerType
        - title
        - startDate
        - endDate
        - days
        - seasoned
        - portfolioId
        - consolidatedAvailableBalance
        - institutions
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        consumerSsn:
          $ref: '#/components/schemas/SocialSecurityNumberLastDigits'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
        constraints:
          $ref: '#/components/schemas/ReportConstraintsOut'
        customerType:
          $ref: '#/components/schemas/CustomerType'
        title:
          $ref: '#/components/schemas/ReportTitle'
        startDate:
          # Date of the earliest transaction analyzed for this report
          $ref: '#/components/schemas/UnixDate'
        endDate:
          # Date of the latest transaction analyzed for this report
          $ref: '#/components/schemas/UnixDate'
        days:
          $ref: '#/components/schemas/ReportCoveredDays'
        seasoned:
          $ref: '#/components/schemas/Seasoned'
        portfolioId:
          $ref: '#/components/schemas/PortfolioId'
        consolidatedAvailableBalance:
          type: number
          description:
            Sum of available balances for all of the accounts included in the
            report
          example: 1929.57
        institutions:
          type: array
          items:
            $ref: '#/components/schemas/ReportInstitution'
          description: >-
            A list of institution records, including information about the
            individual accounts used in this report
        errors:
          description: In case errors occurred during the report generation
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    ReportInstitution:
      required:
        - id
        - name
        - urlHomeApp
        - accounts
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericInstitutionId'
        name:
          $ref: '#/components/schemas/InstitutionName'
        urlHomeApp:
          type: string
          description: The URL of the institution's primary home page
          example: 'https://finbank.prod.fini.city/CCBankImageMFA/login.jsp'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/ReportAccount'
          description: An array of accounts
    ReportSummary:
      required:
        - id
        - consumerId
        - consumerSsn
        - requesterName
        - requestId
        - constraints
        - type
        - status
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ReportId'
        consumerId:
          $ref: '#/components/schemas/ConsumerId'
        consumerSsn:
          $ref: '#/components/schemas/SocialSecurityNumberLastDigits'
        requesterName:
          $ref: '#/components/schemas/PartnerName'
        requestId:
          $ref: '#/components/schemas/ReportRequestId'
        constraints:
          $ref: '#/components/schemas/ReportConstraintsOut'
        type:
          $ref: '#/components/schemas/ReportType'
        status:
          $ref: '#/components/schemas/ReportStatus'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
    ReportAccount:
      required:
        - id
        - number
        - ownerName
        - ownerAddress
        - name
        - type
        - aggregationStatusCode
        - balance
        - balanceDate
        - averageMonthlyBalance
        - transactions
        - asset
        - details
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
        number:
          type: string
          description: >-
            The account number from the institution (all digits except the last
            four are obfuscated)
          example: '1111'
        ownerName:
          type: string
          description: >-
            The name(s) of the account owner(s). This field is optional. If no
            owner information is available, this field will not appear in the
            report.
          example: JOHN DOE
        ownerAddress:
          type: string
          description: >-
            The mailing address of the account owner(s). This field is optional.
            If no owner information is available, this field will not appear in
            the report.
          example: '924 GAINSVILLE HIGHWAY SUITE 130 BUFORD, GA 30518'
        name:
          type: string
          description: The account name from the institution
          example: Checking
        type:
          type: string
          description: One of the values from Account Types
          example: checking
        currency:
          $ref: '#/components/schemas/Currency'
        availableBalance:
          type: number
          description: The available balance for the account
          example: 501.24
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        balance:
          type: number
          description: The cleared balance of the account as-of balanceDate
          example: 501.24
        balanceDate:
          # Date for when the balance was captured
          $ref: '#/components/schemas/UnixDate'
        averageMonthlyBalance:
          type: number
          description: The average monthly balance of this account
          example: 501.02
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ReportTransaction'
          description: An array of transactions belonging to the account
        asset:
          $ref: '#/components/schemas/PrequalificationReportAssetSummary'
        details:
          $ref: '#/components/schemas/AccountDetail'
        incomeStream:
          $ref: '#/components/schemas/ReportIncomeStream'
        incomeStreams:
          type: array
          items:
            $ref: '#/components/schemas/ReportIncomeStream'
          description: A list of income stream records
        totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount:
          type: integer
          description: >-
            (Prequalification Report) The total number of days since the most
            recent insufficient funds fee for the account
          format: int32
          example: 0
        totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount:
          type: integer
          description: >-
            (Prequalification Report) The total number of  insufficient funds
            fees for the account over six months
          format: int32
          example: 0
    VOIEWithInterviewData:
      required:
        - txVerifyInterview
      type: object
      properties:
        txVerifyInterview:
          description: An array of 'TxVerifyInterview' objects
          type: array
          items:
            $ref: '#/components/schemas/TxVerifyInterview'
        extractEarnings:
          $ref: '#/components/schemas/ExtractEarnings'
        extractDeductions:
          $ref: '#/components/schemas/ExtractDeductions'
        extractDirectDeposit:
          $ref: '#/components/schemas/ExtractDirectDeposit'
    TxPushSubscriptionParameters:
      required:
        - callbackUrl
      type: object
      properties:
        callbackUrl:
          $ref: '#/components/schemas/TxPushCallbackUrl'
    Status:
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      example: ACTIVE
    TransactionType:
      enum:
        - atm
        - cash
        - check
        - credit
        - debit
        - deposit
        - directDebit
        - directDeposit
        - dividend
        - fee
        - interest
        - other
        - payment
        - pointOfSale
        - repeatPayment
        - serviceCharge
        - transfer
      type: string
      description: >-
        If provided by the institution, the following values may be returned in
        the field of a record:
      example: atm
    ReportTransactionPayStatementMatchTypes:
      enum:
        - DATE
        - NET_AMOUNT
        - INTERVIEW_AMOUNT
        - LESS_THAN_NET_PAY
        - EMPLOYER_NAME
        - INCOME_STREAM_PAYCHECK
        - DIRECT_DEPOSIT_AMOUNT
        - PAYROLL_PROVIDER
      type: string
      description: Pay Statement matches found at the transaction level
      example: DATE
    PayStatement:
      description: A pay statement document and pay statement label
      required:
        - label
        - statement
      type: object
      properties:
        label:
          type: string
          description: >-
            The label to be associated with the pay statement. This label will
            allow the paystub to go through data extraction.

            * `lastPayPeriod`: default label that should be used for the VOIE -
            Paystub products

            * `lastPayPeriodMinusOne`: the second most recent pay statement

            * `lastPayPeriodMinusTwo`: the third most recent pay statement

            * `previousYearLastPayPeriod` Last pay statement of the previous
            calendar year

            * `previousYear2LastPayPeriod`: last pay statement of the calendar
            year 2 years prior

            * `earliestPayPeriod`: the earliest pay statement
          example: lastPayPeriod
        statement:
          type: string
          description:
            A Base64 encoded pay statement file. Finicity supports PDF, JPG, or
            PNG files.
          example: 'VGhpcyBtdXN0IGJlIGFuIGltYWdl'
    ReportStatus:
      type: string
      description:
        A report generation status ("inProgress", "success", "failure")
      example: inProgress
    ReportType:
      enum:
        - voi
        - voa
        - voaHistory
        - history
        - voieTxVerify
        - voieWithReport
        - voieWithInterview
        - paystatement
        - preQualVoa
        - assetSummary
        - voieWithStatement
        - transactions
        - statement
        - voiePayroll
        - voeTransactions
        - voePayroll
        - cfrp
        - cfrb
      type: string
      example: voi
    LoanPaymentDetails:
      description: Loan payment details for a customer account
      required:
        - loanNumber
        - loanPaymentNumber
        - loanPaymentAddress
      type: object
      properties:
        loanNumber:
          type: string
          description: The number of the specific loan under the account.
          example: '123456789'
        loanPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: '5231123456789'
        loanPaymentAddress:
          type: string
          description: The payment address to send manual payments to
          example: Heartland ECSI       PO Box 718       Wexford PA 15090
        accountDetail:
          $ref: '#/components/schemas/LoanPaymentDetailsAccount'
    Asset:
      description: A Finicity asset
      required:
        - assetId
      type: object
      properties:
        assetId:
          $ref: '#/components/schemas/AssetId'
    TxPushSubscriptions:
      required:
        - subscriptions
      type: object
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRecord'
    SubscriptionRecord:
      required:
        - id
        - accountId
        - type
        - callbackUrl
        - signingKey
      type: object
      properties:
        id:
          $ref: '#/components/schemas/SubscriptionId'
        accountId:
          $ref: '#/components/schemas/NumericAccountId'
        type:
          $ref: '#/components/schemas/SubscriptionType'
        callbackUrl:
          $ref: '#/components/schemas/TxPushCallbackUrl'
        signingKey:
          type: string
          description: Signing key for events
          example: 'zg4U0v1IvTzFEHIXzJMxPHnfUwWZAMVpXrUuNuL9IvZI0QzkDdwp39IAKuNOFxOVqCOgHLMS1Zpe4ZL40NX83aJkqI6v0Ez5B7BLBtvr7Ag11kPH3uG1taTeOV0CTyI4LOg7ohSHn0DqaRu2aBq26KI90nYe0CecTCzzhu4yMXL43JV8YfydAexNdkzfg8tY44MlhBPUh2neHW2EFTT2ja4s4Ul10JgID03un8WBSrIm2adHw3QYJB4jk4k1e'
      description: TxPush subscription details
    CreatedTestTxPushTransaction:
      required:
        - id
        - createdDate
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransactionId'
        createdDate:
          $ref: '#/components/schemas/UnixDate'
      description: Response for TxPush test transaction
    ACHDetails:
      required:
        - routingNumber
        - realAccountNumber
      type: object
      properties:
        routingNumber:
          type: string
          description: >-
            The routing number of the financial institution for this specific
            customers account
          example: '123456789'
        realAccountNumber:
          type: string
          description:
            The account number for initiating ACH transfers for this account
          example: '002345678901'
      description:
        The routing and account number information to initiate ACH transfers
    PrequalificationReport:
      description: A Prequalification report
      required:
        - id
        - customerId
        - requesterName
        - requestId
        - type
        - status
        - createdDate
        - constraints
        - customerType
        - title
        - startDate
        - endDate
        - days
        - seasoned
        - portfolioId
        - consolidatedAvailableBalance
        - institutions
        - assets
      allOf:
        - $ref: '#/components/schemas/AuditableReport'
        - type: object
          properties:
            assets:
              $ref: '#/components/schemas/PrequalificationReportAssetSummary'
    PayStatementReportConstraints:
      required:
        - paystatementReport
      type: object
      properties:
        paystatementReport:
          $ref: '#/components/schemas/PayStatementData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    PayStatementReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/PayStatementReportConstraints'
    VOIEWithTXVerifyReportConstraints:
      required:
        - voieWithInterviewData
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        voieWithInterviewData:
          $ref: '#/components/schemas/VOIEWithInterviewData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    VOIEWithTXVerifyReportConstraintsOut:
      required:
        - voieWithInterviewData
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        voieWithInterviewData:
          $ref: '#/components/schemas/VOIEWithInterviewData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    VOIEPaystubWithTXVerifyReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOIEWithTXVerifyReportConstraintsOut'
    AggregationStatusCode:
      type: integer
      description:
        The status of the most recent aggregation attempt (see [Aggregation
        Status Codes](https://docs.finicity.com/aggregation-status-codes/)).
        Won't be present until you have run your first aggregation for the
        account.
    AccountType:
      enum:
        - checking
        - savings
        - cd
        - moneyMarket
        - creditCard
        - lineOfCredit
        - investment
        - investmentTaxDeferred
        - employeeStockPurchasePlan
        - ira
        - 401k
        - roth
        - 403b
        - 529plan
        - rollover
        - ugma
        - utma
        - keogh
        - 457plan
        - 401a
        - mortgage
        - loan
        - studentLoan
        - studentLoanGroup
        - studentLoanAccount
      type: string
      description: The enumeration of supported account types
      example: checking
    Transactions:
      description: A list of transactions
      required:
        - found
        - displaying
        - moreAvailable
        - fromDate
        - toDate
        - sort
        - transactions
      type: object
      properties:
        found:
          $ref: '#/components/schemas/FoundResults'
        displaying:
          $ref: '#/components/schemas/DisplayingResults'
        moreAvailable:
          $ref: '#/components/schemas/MoreResultsAvailable'
        fromDate:
          $ref: '#/components/schemas/UnixDate'
        toDate:
          $ref: '#/components/schemas/UnixDate'
        sort:
          type: string
          description:
            Value of the sort request parameter that generated this response
          example: desc
        transactions:
          description: The array of transactions
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    TestTxPushTransaction:
      description: A fake transaction for TxPush testing
      required:
        - amount
        - description
        - transactionDate
      type: object
      properties:
        amount:
          type: number
          description: The amount of the transaction
          example: -4.25
        description:
          type: string
          description: The description of the transaction
          example: a testing transaction description
        status:
          type: string
          description: active or pending (optional)
          default: active
          example: pending
        postedDate:
          # A timestamp for the transaction's posted date value for
          # this transaction. Timestamp must be
          # no more than 6 months from the current date.
          $ref: '#/components/schemas/UnixDate'
        transactionDate:
          $ref: '#/components/schemas/UnixDate'
    TransactionsReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/TransactionReportConstraints'
    TransactionReportConstraints:
      type: object
      properties:
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        fromDate:
          # Without this parameter, the report defaults to 6 months if available
          # If included, the epoch timestamp should be 10 digits long and be within
          # two years of the present day
          $ref: '#/components/schemas/UnixDate'
        toDate:
          $ref: '#/components/schemas/UnixDate'
        includePending:
          $ref: '#/components/schemas/IncludePending'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    PortfolioConsumer:
      required:
        - id
        - firstName
        - lastName
        - customerId
        - ssn
        - birthday
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConsumerId'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        customerId:
          $ref: '#/components/schemas/NumericCustomerId'
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        suffix:
          $ref: '#/components/schemas/Suffix'
    EstimateInclusion:
      enum:
        - HIGH
        - MODERATE
        - LOW
        - NO
      type: string
      description: Estimate Inclusion
      example: HIGH
    StatementReportConstraints:
      required:
        - statementReportData
      type: object
      properties:
        statementReportData:
          $ref: '#/components/schemas/StatementData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    StatementData:
      required:
        - accountId
      type: object
      properties:
        accountId:
          # Account to retrieve the statement for and display in the report.
          $ref: '#/components/schemas/NumericAccountId'
        index:
          type: integer
          description: Index of the statement to retrieve
          format: int32
          example: 1
          default: 1
          maximum: 6
    StatementReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/StatementReportConstraints'
    PayrollData:
      required:
        - ssn
        - dob
      type: object
      properties:
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumberNoHyphens'
        dob:
          $ref: '#/components/schemas/ConsumerDateOfBirth'
        reportId:
          # The Report Id of the original VOIE Payroll report
          $ref: '#/components/schemas/ReportId'
    PayrollReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/PayrollReportConstraintsOut'
    PayrollReportConstraintsOut:
      required:
        - payrollData
      type: object
      properties:
        payrollData:
          $ref: '#/components/schemas/PayrollDataOut'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    PayrollDataOut:
      required:
        - payrollDataRetrievalId
        - employerNames
      type: object
      properties:
        payrollDataRetrievalId:
          type: string
          description: >-
            An id to identify the data retrieved from the payroll providers for
            the report.
          example: hahvhe2k0000
        employerNames:
          type: array
          items:
            type: string
            example: 'Enterprise One'
          description: >-
            An array of employer names that the consumer submitted after
            completing the Connect application.
        reportId:
          # The Report Id of the original VOIE Payroll report
          $ref: '#/components/schemas/ReportId'
    PayrollReportConstraints:
      required:
        - payrollData
      type: object
      properties:
        payrollData:
          $ref: '#/components/schemas/PayrollData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
    AvailableBalance:
      required:
        - id
        - realAccountNumberLast4
        - availableBalance
        - availableBalanceDate
        - clearedBalance
        - clearedBalanceDate
        - aggregationStatusCode
        - currency
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NumericCustomerId'
        realAccountNumberLast4:
          $ref: '#/components/schemas/AccountNumberLast4'
        availableBalance:
          type: number
          description: The available balance of the account
          example: 173.47
        availableBalanceDate:
          $ref: '#/components/schemas/UnixDate'
        clearedBalance:
          type: number
          description: >-
            The cleared balance of the account. Also referred as posted balance,
            current balance, ledger balance
          example: 222.25
        clearedBalanceDate:
          $ref: '#/components/schemas/UnixDate'
        aggregationStatusCode:
          $ref: '#/components/schemas/AggregationStatusCode'
        currency:
          # The currency of the account
          $ref: '#/components/schemas/Currency'
    VOIEWithStatementData:
      required:
        - assetIds
      type: object
      properties:
        assetIds:
          description: A list of pay statement asset IDs
          type: array
          items:
            $ref: '#/components/schemas/AssetId'
        extractEarnings:
          $ref: '#/components/schemas/ExtractEarnings'
        extractDeductions:
          $ref: '#/components/schemas/ExtractDeductions'
        extractDirectDeposit:
          $ref: '#/components/schemas/ExtractDirectDeposit'
    VOIEWithStatementReportConstraints:
      required:
        - voieWithStatementData
      type: object
      properties:
        voieWithStatementData:
          $ref: '#/components/schemas/VOIEWithStatementData'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
      description: >-
        The request details from the report generation that were used to
        generate the report
    VOIEPaystubWithStatementReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOIEWithStatementReportConstraints'
    VOETransactionsReportConstraints:
      type: object
      properties:
        reportId:
          # The Report Id of the original VOAI report or VOIE - Paystub (with
          # TXVerify) report. This is an optional field and if included only the
          # accounts from the report would be included in the VOE - Transactions
          # report, otherwise all accounts for the consumer would be considered.
          $ref: '#/components/schemas/ReportId'
        accountIds:
          $ref: '#/components/schemas/ReportAccountIdsString'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOETransactionsReportConstraintsOut:
      type: object
      properties:
        reportId:
          $ref: '#/components/schemas/ReportId'
        accountIds:
          $ref: '#/components/schemas/ReportAccountIds'
        reportCustomFields:
          $ref: '#/components/schemas/ReportCustomFields'
        incomeStreamConfidenceMinimum:
          $ref: '#/components/schemas/IncomeStreamConfidenceMinimum'
    VOETransactionsReportData:
      required:
        - id
        - portfolioId
        - customerType
        - customerId
        - requestId
        - requesterName
        - createdDate
        - title
        - consumerId
        - consumerSsn
        - type
        - status
      allOf:
        - $ref: '#/components/schemas/BaseReportData'
        - type: object
          properties:
            constraints:
              $ref: '#/components/schemas/VOETransactionsReportConstraintsOut'
    PrequalificationReportAssetSummary:
      required:
        - currentBalance
        - twoMonthAverage
        - sixMonthAverage
        - beginningBalance
      type: object
      properties:
        type:
          type: string
          description: checking / savings / moneyMarket / cd / investment
          example: checking
        availableBalance:
          type: number
          description: The available balance for the account
          example: 1000
        currentBalance:
          type: number
          description: Current balance of the account
          example: 1000
        twoMonthAverage:
          type: number
          description: Two month average daily balance of the account
          example: -1865.96
        sixMonthAverage:
          type: number
          description: Six month average daily balance of the account
          example: -7616.01
        beginningBalance:
          type: number
          description:
            Beginning balance of account per the time period in the report
          example: -17795.6
    LoanPaymentDetailsAccount:
      required:
        - accountId
        - accountNumber
        - accountPaymentNumber
        - accountPaymentAddress
      type: object
      properties:
        accountId:
          # Finicity's ID of the Student Loan Account
          $ref: '#/components/schemas/AccountId'
        accountNumber:
          type: string
          description: Institution's ID of the Student Loan Account
          example: '9876543210'
        accountPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: 00001234895413
        accountPaymentAddress:
          type: string
          description:
            The payment address to which send manual payments should be sent
          example: 'P.O. Box 123 Sioux Falls, IA 51054'
        accountFuturePayoffAmount:
          type: number
          description: The payoff amount for the account
          example: 10000
        accountFuturePayoffDate:
          type: string
          description: The date to which the "Future Payoff Amount" applies
          format: date-time
          example: '2022-01-01T00:00:00.000Z'
        groupDetail:
          description: Group details
          type: array
          items:
            $ref: '#/components/schemas/LoanPaymentDetailsGroup'
        loanDetail:
          description: Loan details
          type: array
          items:
            $ref: '#/components/schemas/LoanPaymentDetailsLoan'
    LoanPaymentDetailsGroup:
      description: Group details
      required:
        - accountId
        - groupNumber
        - groupPaymentNumber
        - groupPaymentAddress
        - groupFuturePayoffAmount
        - groupFuturePayoffDate
        - groupLoanDetail
      type: object
      properties:
        accountId:
          # Finicity's ID of the Student Loan Group
          $ref: '#/components/schemas/AccountId'
        groupNumber:
          type: string
          description: Institution's ID of the Student Loan Group
          example: 3210-Group A
        groupPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: 00001234895413-A
        groupPaymentAddress:
          type: string
          description:
            The payment address to which send manual payments should be sent
          example: 'P.O. Box 123 Sioux Falls, IA 51054'
        groupFuturePayoffAmount:
          type: number
          description: The payoff amount for the group
          example: 7500
        groupFuturePayoffDate:
          type: string
          description: The date to which the "Future Payoff Amount" applies
          format: date-time
          example: '2022-01-01T00:00:00.000Z'
        groupLoanDetail:
          type: array
          items:
            $ref: '#/components/schemas/LoanPaymentDetailsLoan'
    LoanPaymentDetailsLoan:
      description: Loan details
      required:
        - accountId
        - loanNumber
        - loanPaymentNumber
        - loanPaymentAddress
        - loanFuturePayoffAmount
        - loanFuturePayoffDate
      type: object
      properties:
        accountId:
          # Finicity's ID of the Student Loan
          $ref: '#/components/schemas/AccountId'
        loanNumber:
          type: string
          description: Institution's ID of the Student Loan
          example: 3210-Group A-1
        loanPaymentNumber:
          type: string
          description: >-
            The payment number given by the institution. This number is
            typically for manual payments. This is not an ACH payment number.
          example: 00001234895413-A-1
        loanPaymentAddress:
          type: string
          description:
            The payment address to which send manual payments should be sent
          example: 'P.O. Box 123 Sioux Falls, IA 51054'
        loanFuturePayoffAmount:
          type: number
          description: The payoff amount for the loan
          example: 5000
        loanFuturePayoffDate:
          type: string
          description: The date to which the "Future Payoff Amount" applies
          format: date-time
          example: '2022-01-01T00:00:00.000Z'
    ConsumerAttributesAnalyticId:
      description: An analytic ID and a date
      required:
        - analytic_id
        - created_date
      type: object
      properties:
        analytic_id:
          $ref: '#/components/schemas/AnalyticId'
        created_date:
          $ref: '#/components/schemas/NoZoneDateTime'
    ConsumerAttributeList:
      required:
        - analytic_ids
      type: object
      properties:
        analytic_ids:
          description: A list of analytic IDs
          type: array
          items:
            $ref: '#/components/schemas/ConsumerAttributesAnalyticId'
    ConsumerAttributesDataDateRange:
      required:
        - From
        - To
      type: object
      properties:
        From:
          type: string
          description: The `From` date of the date range for the report
          example: '2021-02-01T00:00:00.000Z'
        To:
          type: string
          description: The `To` date of the date range for the report
          example: '2022-02-08T00:00:00.000Z'
    ConsumerAttributesData:
      required:
        - dateRange
        - income
        - expenses
        - netAmount
        - nsf
        - assets
        - liabilities
      type: object
      properties:
        dateRange:
          $ref: '#/components/schemas/ConsumerAttributesDataDateRange'
        income:
          $ref: '#/components/schemas/ConsumerAttributesDataIncome'
        expenses:
          $ref: '#/components/schemas/ConsumerAttributesDataExpenses'
        netAmount:
          $ref: '#/components/schemas/ConsumerAttributesDataNetAmount'
        nsf:
          $ref: '#/components/schemas/ConsumerAttributesDataNSF'
        assets:
          $ref: '#/components/schemas/ConsumerAttributesDataAssets'
        liabilities:
          $ref: '#/components/schemas/ConsumerAttributesDataLiabilities'
    ConsumerAttributesDataIncome:
      required:
        - netAnnualIncome
        - netAnnualIncomeByAccount
        - monthlyNetIncome
        - monthlyNetIncomeByAccount
      type: object
      properties:
        netAnnualIncome:
          type: number
          description:
            Net annual of all income by customer for the last 12 months.
          example: 68068.25
        netAnnualIncomeByAccount:
          type: object
          description: Net annual of income by account for the last 12 months.
          example:
            '5001861692': 229.28
            '5001861693': 67838.97
        monthlyNetIncome:
          type: object
          description: Net monthly income by customer for the last 12 months.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2925.73
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2562.52
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2562.96
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2620.28
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2770.59
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2736.4
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2629.26
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2836.89
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1450.15
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1560.06
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3897.18
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 2824.58
        monthlyNetIncomeByAccount:
          type: object
          description: Net monthly income by account for the last 12 months.
          example:
            '5001861692':
              'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 57.32
              'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 57.32
              'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 57.32
              'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 57.32
            '5001861693':
              'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2925.73
              'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2562.52
              'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2562.96
              'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2620.28
              'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2770.59
              'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2736.4
              'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2629.26
              'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2836.89
              'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1450.15
              'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1560.06
              'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3897.18
              'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 2824.58
    ConsumerAttributesDataExpenses:
      required:
        - dwellingExpenseTotal
        - dwellingExpensesByAccount
        - monthlyDwellingExpenseByCustomer
        - monthlyDwellingExpenseByAccount
        - monthlyDebitAmountByCustomer
        - monthlyExpenseAmountByCustomer
      type: object
      properties:
        dwellingExpenseTotal:
          type: string
          description: >-
            Total dwelling expenses for the last 12 months: rent, mortgage,
            utilities, and insurance
          example: '5856.07'
        dwellingExpensesByAccount:
          type: object
          description: >-
            Total dwelling expenses by account for the last 12 months: rent,
            mortgage, utilities, and insurance
          example:
            dwellingExpensesByAccount:
              '5001861693': -5856.07
        monthlyDwellingExpenseByCustomer:
          type: object
          description: Monthly dwelling expenses by customer
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -217.37
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -146.25
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -205.86
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -309.84
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -593.07
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -202.1
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -243.55
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -136.96
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -145.37
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -261.35
            'Sun Jan 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -172.99
            'Sun Feb 28 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -176.96
        monthlyDwellingExpenseByAccount:
          type: object
          description: Monthly dwelling expenses by account
          example:
            '5001861693':
              'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -217.37
              'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -146.25
              'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -205.86
              'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -309.84
              'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -593.07
              'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -202.1
              'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -243.55
              'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -136.96
              'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -145.37
              'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -261.35
              'Sun Jan 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -172.99
              'Sun Feb 28 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -176.96
        monthlyDebitAmountByCustomer:
          type: object
          description: Total monthly debit amounts by customer
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -7259.58
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -15368.09
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -11937.66
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -12704.43
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -9089.55
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -4099.97
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -19627.13
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -9927.53
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -7694.94
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -37310.54
            'Sun Jan 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -25129.31
            'Sun Feb 28 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -9548.28
        monthlyExpenseAmountByCustomer:
          type: object
          description: >-
            Total monthly debit amounts, excluding transfers and credit card
            payments.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -7259.58
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -15368.09
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -11937.66
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -12704.43
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -9089.55
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -4099.97
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -19627.13
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -9927.53
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -7694.94
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -37310.54
            'Sun Jan 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -25129.31
            'Sun Feb 28 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -9548.28
    ConsumerAttributesDataNSF:
      required:
        - monthlyNSFOccurrences
        - monthlyLateFeeOccurrences
      type: object
      properties:
        monthlyNSFOccurrences:
          type: object
          description:
            The number of non-sufficient funds occurrences per calendar month.
          example:
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
        monthlyLateFeeOccurrences:
          type: integer
          format: int32
          description: The number of late fee occurrences.
          example: 35
    ConsumerAttributesDataLiabilities:
      required:
        - monthlyLoanDeposits
        - monthlyLoanWitdrawls
        - monthlyNumberOfLoanDeposits
        - monthlyNumberOfLoanWithdrawls
      type: object
      properties:
        monthlyLoanDeposits:
          type: object
          description: Monthly loan deposits amount by account.
          example:
            3-2021: 2799.08
            4-2021: 2947.63
            5-2021: 2863.37
        monthlyLoanWitdrawls:
          type: object
          description: Monthly loan withdrawal amount by account.
          example:
            3-2021: -150.17
            4-2021: -95.03
            5-2021: -341.26
        monthlyNumberOfLoanDeposits:
          type: object
          description: Monthly count of the number of loan deposits by account.
          example:
            3-2021: 1
            4-2021: 1
            5-2021: 1
        monthlyNumberOfLoanWithdrawls:
          type: object
          description: Monthly amount of the number of loan deposits by account.
          example:
            3-2021: 1
            4-2021: 1
            5-2021: 1
    ConsumerAttributesAssetsCustomer:
      required:
        - monthlyMinimumBalance
        - monthlyMaximumBalance
        - monthlyAverageBalance
        - monthlyStandardDeviationOfBalance
        - monthlyDaysWithPositiveBalance
        - monthlyDaysWithNegativeBalance
        - monthlyTwoMonthAverageBalance
        - monthlySixMonthAverageBalance
        - twelveMonthAverageBalance
        - twoMonthStandardDeviationOfBalance
        - sixMonthStandardDeviationOfBalance
        - twelveMonthStandardDeviationOfBalance
      type: object
      properties:
        monthlyMinimumBalance:
          type: object
          description:
            The minimum balance for the month across all customer accounts.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20841.81
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 16014.16
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 16949.55
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 645.01
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 702.33
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -18.89
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -1346.13
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -1288.81
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -1231.49
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -1952.71
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 14614.31
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 19705.31
        monthlyMaximumBalance:
          type: object
          description:
            The maximum balance for the month across all customer accounts.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26321.24
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26528.01
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 25110.12
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22676.89
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22889.45
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 24431.44
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26144.03
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 30679.71
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 29099.98
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 52998.24
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 28163.22
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 26827.62
        monthlyAverageBalance:
          type: object
          description:
            The average balance for the month across all customer accounts.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23166.96
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21500.16
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21079.24
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17207.09
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17680.23
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20177.06
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21624.44
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23147.34
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23024.08
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23156.56
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 20371.3
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 22523.83
        monthlyStandardDeviationOfBalance:
          type: object
          description: >-
            The standard deviation for the month across all customer account
            balances.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1581.38
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3880.2
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2324.47
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4828.27
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5078.26
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5921.8
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 6092.64
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 7479.2
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 6979.12
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 10374.49
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3116.12
            'Fri Jan 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 2326.82
        monthlyDaysWithPositiveBalance:
          type: object
          description: >-
            The number of days in a month with a positive account balance across
            all customer account balances.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 19
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 14
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 18
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 13
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 15
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 16
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 15
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 22
        monthlyDaysWithNegativeBalance:
          type: object
          description: >-
            The number of days in a month with a negative account balance across
            all customer account balances.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 0
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 0
        monthlyTwoMonthAverageBalance:
          type: object
          description: Customer average balance for two months.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22845.4
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22333.56
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21289.7
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 19143.17
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17443.66
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 18928.64
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20900.75
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22385.89
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23085.71
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23090.32
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 21763.93
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 24573.46
        monthlySixMonthAverageBalance:
          type: object
          description: Customer average balance for six months.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 28794.93
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 25860.09
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23895.76
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22016.73
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20526.25
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20135.12
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 19878.04
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20152.57
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 20476.71
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 21468.29
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 21916.8
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 32063.74
        twelveMonthAverageBalance:
          type: object
          description: Customer average balance for twelve months.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 33677.33
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 32656.57
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 31325.31
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 29758.99
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 27896.6
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26099.43
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 24336.49
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23006.33
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 22186.24
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 21742.51
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 21221.53
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 34637.95
        twoMonthStandardDeviationOfBalance:
          type: object
          description: Two month standard deviation of customer balance.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1954.1
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2730.79
            'Sun May 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3102.33
            'Thu Jul 01 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3576.37
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4953.27
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5500.03
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 6007.22
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 6785.92
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 7229.16
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 8676.8
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 6745.3
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3236.86
        sixMonthStandardDeviationOfBalance:
          type: object
          description: Six month standard deviation of customer balance.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3004.4
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3010.97
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2975.17
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3181.34
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3336.57
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3935.73
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4687.61
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5287.44
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 6063.22
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 6987.58
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 6660.56
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3023.26
        twelveMonthStandardDeviationOfBalance:
          type: object
          description: Twelve month standard deviation of customer balance.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2799.08
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2947.63
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2863.37
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3065.62
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3224.32
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3479.49
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3846
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4149.2
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 4519.19
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 5084.46
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 4998.56
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 2871.45
    ConsumerAttributesAssetsAccount:
      required:
        - monthlyClosingBalance
        - monthlyMinimumBalance
        - monthlyMaximumBalance
        - monthlyAverageBalance
        - monthlyStandardDeviationOfBalance
        - monthlyDaysWithPositiveBalance
        - monthlyDaysWithNegativeBalance
        - monthlyTwoMonthAverageBalance
        - monthlySixMonthAverageBalance
        - twelveMonthAverageBalance
        - twoMonthStandardDeviationOfBalance
        - sixMonthStandardDeviationOfBalance
        - twelveMonthStandardDeviationOfBalance
      type: object
      properties:
        monthlyClosingBalance:
          type: object
          description: Account closing balance by month.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20841.81
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 16014.16
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 16949.55
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 645.01
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 702.33
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -18.89
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -1346.13
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -1288.81
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -1231.49
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -1952.71
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 14614.31
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 19705.31
        monthlyMinimumBalance:
          type: object
          description: Account minimum balance by month.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20841.81
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 16014.16
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 16949.55
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 645.01
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 702.33
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -18.89
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -1346.13
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -1288.81
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -1231.49
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -1952.71
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 14614.31
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 19705.31
        monthlyMaximumBalance:
          type: object
          description: Account maximum balance by month.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26321.24
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26528.01
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 25110.12
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22676.89
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22889.45
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 24431.44
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26144.03
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 30679.71
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 29099.98
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 52998.24
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 28163.22
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 26827.62
        monthlyAverageBalance:
          type: object
          description: Account maximum balance by month.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23166.96
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21500.16
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21079.24
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17207.09
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17680.23
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20177.06
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21624.44
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23147.34
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23024.08
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23156.56
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 20371.3
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 22523.83
        monthlyStandardDeviationOfBalance:
          type: object
          description: Standard deviation of balance by account.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1581.38
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3880.2
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2324.47
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4828.27
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5078.26
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5921.8
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 6092.64
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 7479.2
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 6979.12
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 10374.49
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3116.12
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 2326.82
        monthlyDaysWithPositiveBalance:
          type: object
          description:
            Number of days in a month with a positive account balance.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 19
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 14
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 18
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 13
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 15
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 16
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 15
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 22
        monthlyDaysWithNegativeBalance:
          type: object
          description:
            Number of days in a month with a negative account balance.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 0
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 1
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 0
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 0
        monthlyTwoMonthAverageBalance:
          type: object
          description: Two month average balance by account.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22845.4
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22333.56
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 21289.7
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 19143.17
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 17443.66
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 18928.64
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20900.75
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22385.89
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23085.71
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 23090.32
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 21763.93
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 24573.46
        monthlySixMonthAverageBalance:
          type: object
          description: Six month average balance by account.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 28794.93
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 25860.09
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23895.76
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 22016.73
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20526.25
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20135.12
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 19878.04
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 20152.57
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 20476.71
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 21468.29
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 21916.8
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 32063.74
        twelveMonthAverageBalance:
          type: object
          description: Twelve month average balance by account.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 33677.33
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 32656.57
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 31325.31
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 29758.99
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 27896.6
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 26099.43
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 24336.49
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 23006.33
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 22186.24
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 21742.51
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 21221.53
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 34637.95
        twoMonthStandardDeviationOfBalance:
          type: object
          description: Standard deviation of account balance across two months.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 1954.1
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2730.79
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3102.33
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3576.37
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4953.27
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5500.03
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 6007.22
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 6785.92
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 7229.16
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 8676.8
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 6745.3
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3236.86
        sixMonthStandardDeviationOfBalance:
          type: object
          description: Standard deviation of account balance across six months.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3004.4
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3010.97
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2975.17
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3181.34
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3336.57
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3935.73
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4687.61
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 5287.44
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 6063.22
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 6987.58
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 6660.56
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 3023.26
        twelveMonthStandardDeviationOfBalance:
          type: object
          description:
            Standard deviation of account balance across twelve months.
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2799.08
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2947.63
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 2863.37
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3065.62
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3224.32
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3479.49
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': 3846
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': 4149.2
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 4519.19
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': 5084.46
            'Mon Jan 31 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 4998.56
            'Mon Feb 28 2022 00:00:00 GMT+0000 (Greenwich Mean Time)': 2871.45
    ConsumerAttributesDataAssets:
      required:
        - customer
        - account
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/ConsumerAttributesAssetsCustomer'
        account:
          $ref: '#/components/schemas/ConsumerAttributesAssetsAccount'
    ConsumerAttributes:
      required:
        - analytics_id
        - ca360_data
      type: object
      properties:
        analytics_id:
          $ref: '#/components/schemas/AnalyticId'
        ca360_data:
          $ref: '#/components/schemas/ConsumerAttributesData'
    ConsumerAttributesDataNetAmount:
      required:
        - monthlyNetAmount
      type: object
      properties:
        monthlyNetAmount:
          $ref: '#/components/schemas/MonthlyNetAmount'
    MonthlyNetAmount:
      description: Monthly net amount
      required:
        - NetAmount
      type: object
      properties:
        NetAmount:
          description: Net amount per month
          type: object
          example:
            'Wed Mar 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -4333.85
            'Fri Apr 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -3605.57
            'Mon May 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -9374.7
            'Wed Jun 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -10084.15
            'Sat Jul 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -6318.96
            'Tue Aug 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -1363.57
            'Thu Sep 30 2021 01:00:00 GMT+0100 (Irish Standard Time)': -16997.87
            'Sun Oct 31 2021 01:00:00 GMT+0100 (Irish Standard Time)': -6870.64
            'Tue Nov 30 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -6244.79
            'Fri Dec 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -35750.48
            'Sun Jan 31 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -21232.13
            'Sun Feb 28 2021 00:00:00 GMT+0000 (Greenwich Mean Time)': -6723.7
